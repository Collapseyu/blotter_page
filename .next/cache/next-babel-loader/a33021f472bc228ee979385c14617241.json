{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Left } from '@/components/svg';\nimport Image from '@/components/image';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './carousel.module.scss';\nexport default function Carousel(props) {\n  const {\n    images,\n    height = '100%',\n    width = '100%',\n    maxHeight,\n    background,\n    style,\n    autoplay = 0\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"images\", \"height\", \"width\", \"maxHeight\", \"background\", \"style\", \"autoplay\"]);\n\n  const length = React.useMemo(() => images.length, [images]);\n  const [now, setNow] = React.useState(0);\n  const pre = React.useCallback(() => setNow((now - 1 + length) % length), [length, now, setNow]);\n  const next = React.useCallback(() => setNow((now + 1 + length) % length), [length, now, setNow]);\n  React.useEffect(() => {\n    const id = setTimeout(next, autoplay);\n    console.log('timer', id);\n    return () => {\n      console.log('timer stop', id);\n      clearTimeout(id);\n    };\n  }, [autoplay, next]);\n  return __jsx(\"div\", {\n    style: {\n      background\n    },\n    className: styles.container\n  }, __jsx(\"div\", _extends({}, restProps, {\n    className: styles.carousel,\n    style: _objectSpread({\n      height,\n      width,\n      maxHeight\n    }, style)\n  }), __jsx(Flex, {\n    fullWidth: true,\n    wrap: false,\n    itemStyle: {\n      flex: '0 0 100%'\n    },\n    mainSize: 0,\n    className: styles.images,\n    style: {\n      left: `-${now * 100}%`\n    }\n  }, images.map((image, idx) => __jsx(Image, {\n    key: idx,\n    src: image,\n    alt: `图片 ${idx + 1}`,\n    title: image.split('#').slice(1).join('#'),\n    height: height,\n    maxHeight: maxHeight,\n    clickable: true\n  })))), __jsx(Left, {\n    className: styles.button,\n    onClick: pre,\n    style: {\n      left: '10px'\n    }\n  }), __jsx(Left, {\n    className: styles.button,\n    style: {\n      transform: 'rotate(180deg)',\n      right: '10px'\n    },\n    onClick: next\n  }), !!images && images.length > 1 && __jsx(Flex, {\n    fullWidth: true,\n    wrap: false,\n    className: styles.nav\n  }, images.map((image, idx) => __jsx(\"div\", {\n    key: idx,\n    onClick: () => setNow(idx),\n    style: {\n      cursor: 'pointer'\n    },\n    className: concat(styles.nav_item, idx === now ? styles.active : '')\n  }, __jsx(Image, {\n    src: image,\n    alt: `图片 ${idx + 1}`,\n    title: image.split('#').slice(1).join('#'),\n    height: '100px'\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}