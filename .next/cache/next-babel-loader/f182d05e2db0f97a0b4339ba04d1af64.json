{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Card from '@/components/card';\nimport Table from '@/components/table';\nimport Button, { A } from '@/components/button';\nimport Popover from '@/components/popover';\nimport TagPart from '@/components/tag';\nimport PostSearch from '@/components/post_search';\nimport { Eye, EyeInvisible, Edit, Delete, Plus } from '@/components/svg';\nimport { Flex } from '@/components/container';\nimport { adminPosts, postDelete } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\nimport { waitUntil } from '@/utils/debounce';\nvar defaultSort = 'publish_time';\nvar defaultUp = false;\n\nvar AdminPostList = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminPostList, _React$Component);\n\n  var _super = _createSuper(AdminPostList);\n\n  function AdminPostList(props) {\n    var _this;\n\n    _classCallCheck(this, AdminPostList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      waitUntil('index_search', function () {\n        _this.setState({\n          search: value,\n          page: 1,\n          size: 10\n        }, _this.getData);\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var r;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return adminPosts(_this.state.search, _this.state.search_fields, _this.state.page, _this.state.size, _this.state.field, _this.state.up, _this.state.with_tags, _this.state.without_tags);\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                total: r.total,\n                data: r.posts,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"columns\", [{\n      title: '标题',\n      key: 'title',\n      minWidth: '5em',\n      maxWidth: '15em',\n      tooltip: function tooltip(text) {\n        return text;\n      },\n      ellipsis: true,\n      render: function render(text, record, index) {\n        return __jsx(Link, {\n          href: '/post/[url]',\n          as: \"/post/\".concat(record.url)\n        }, __jsx(\"a\", null, record.title));\n      }\n    }, {\n      title: '链接',\n      key: 'url',\n      tooltip: true,\n      minWidth: '5em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '发布时间',\n      key: 'publish_time',\n      tooltip: true,\n      sorter: true,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '编辑时间',\n      key: 'edit_time',\n      tooltip: true,\n      sorter: true,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '阅读量',\n      key: 'view',\n      tooltip: true,\n      sorter: true,\n      minWidth: '6em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '已发布',\n      key: 'published',\n      sorter: true,\n      minWidth: '6em',\n      maxWidth: '15em',\n      render: function render(text, record, index) {\n        return text ? __jsx(Eye, {\n          style: {\n            color: 'green'\n          }\n        }) : __jsx(EyeInvisible, {\n          style: {\n            color: 'red'\n          }\n        });\n      }\n    }, {\n      title: '标签',\n      key: 'tags',\n      minWidth: '10em',\n      maxWidth: '20em',\n      render: function render(text, record, index) {\n        return __jsx(Flex, {\n          mainSize: \"small\",\n          subSize: \"small\",\n          mainAxis: \"flex-start\"\n        }, record.tags.map(function (tag) {\n          return __jsx(TagPart, {\n            key: tag[\"short\"],\n            tag: tag\n          });\n        }));\n      }\n    }, {\n      title: '操作',\n      key: 'op',\n      minWidth: '12em',\n      maxWidth: '15em',\n      render: function render(text, record, index) {\n        return __jsx(Flex, {\n          mainAxis: \"space-around\"\n        }, __jsx(Link, {\n          href: \"/admin/post?url=\".concat(record.url)\n        }, __jsx(A, {\n          size: \"small\",\n          neumorphism: true,\n          prefix: __jsx(Edit, null)\n        }, \"\\u7F16\\u8F91\")), __jsx(Popover, {\n          shadow: true,\n          card: true,\n          trigger: ['click'],\n          component: __jsx(Card, null, __jsx(\"span\", null, \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\"), __jsx(Button, {\n            onClick: function onClick() {\n              _this.onDelete(record.id);\n            },\n            danger: true,\n            neumorphism: true,\n            primary: true,\n            size: \"small\"\n          }, \"\\u5220\\u9664\\uFF01\"))\n        }, __jsx(Button, {\n          size: \"small\",\n          danger: true,\n          neumorphism: true,\n          prefix: __jsx(Delete, null)\n        }, \"\\u5220\\u9664\")));\n      }\n    }]);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDelete\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n        var r;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return postDelete(id);\n\n              case 2:\n                r = _context2.sent;\n                ShowNotification(r);\n\n                _this.setState(function (state) {\n                  return {\n                    data: state.data.filter(function (post) {\n                      return post.id != id;\n                    })\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      search: '',\n      search_fields: ['title'],\n      loading: false,\n      data: [],\n      total: 0,\n      size: 10,\n      page: 1,\n      with_tags: [],\n      without_tags: [],\n      field: defaultSort,\n      up: defaultUp\n    };\n    return _this;\n  }\n\n  _createClass(AdminPostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Card, null, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(Head, null, __jsx(\"title\", null, \"\\u6587\\u7AE0\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name)));\n      }), __jsx(PostSearch, {\n        searchWord: this.state.search,\n        onSearchChange: this.onChange,\n        checkedKeys: this.state.search_fields,\n        onCheckChange: function onCheckChange(search_fields) {\n          return _this2.setState({\n            search_fields: search_fields\n          });\n        },\n        withTags: this.state.with_tags,\n        withoutTags: this.state.without_tags,\n        onTagChange: function onTagChange(type, tags) {\n          return _this2.setState(function (state) {\n            return _objectSpread(_objectSpread({}, state), _defineProperty({}, type === 'with' ? 'with_tags' : 'without_tags', tags));\n          });\n        }\n      }), __jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        }\n      }, __jsx(Link, {\n        href: \"/admin/post\"\n      }, __jsx(A, {\n        primary: true,\n        neumorphism: true,\n        prefix: __jsx(Plus, null)\n      }, \"\\u65B0\\u5EFA\\u6587\\u7AE0\"))), __jsx(Table, {\n        columns: this.columns,\n        data: this.state.data,\n        loading: this.state.loading,\n        onChange: function onChange(page, size, field, up) {\n          return _this2.setState({\n            page: page,\n            size: size,\n            field: field,\n            up: up\n          }, _this2.getData);\n        },\n        pagination: {\n          page: this.state.page,\n          total: this.state.total,\n          size: this.state.size,\n          sizeSelect: [5, 10, 20, 50, 100]\n        }\n      }));\n    }\n  }]);\n\n  return AdminPostList;\n}(React.Component);\n\n_defineProperty(AdminPostList, \"defaultProps\", {});\n\nexport default AdminPostList;","map":null,"metadata":{},"sourceType":"module"}