{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './card.module.scss';\nimport shadowStyles from '@/styles/shadow.module.scss';\n\nfunction Card(props, ref) {\n  const {\n    shadow = false,\n    neumorphism = false,\n    neumorphismInset = false,\n    cover,\n    className,\n    style,\n    children,\n    mainStyle\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"shadow\", \"neumorphism\", \"neumorphismInset\", \"cover\", \"className\", \"style\", \"children\", \"mainStyle\"]);\n\n  var classList = [styles.card, className];\n  if (shadow) classList.push(shadowStyles.shadow);\n  if (neumorphism) classList.push(shadowStyles.neumorphism);\n  if (neumorphismInset) classList.push(shadowStyles.neumorphism_inset);\n  return __jsx(\"div\", _extends({}, restProps, {\n    ref: ref,\n    className: concat(...classList),\n    style: style\n  }), __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true\n  }, cover, __jsx(\"div\", {\n    className: styles.main,\n    style: mainStyle\n  }, children)));\n}\n\nexport default /*#__PURE__*/React.forwardRef(Card);","map":null,"metadata":{},"sourceType":"module"}