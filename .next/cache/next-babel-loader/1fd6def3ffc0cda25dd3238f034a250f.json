{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport { Flex } from '@/components/container';\nimport styles from './radio.less';\nexport default function Radio(props) {\n  const {\n    direction = 'LR',\n    options,\n    defaultValue = '',\n    value,\n    onChange = () => {},\n    setValueCallback = () => {},\n    getValueCallback = () => {},\n    className,\n    style,\n    id\n  } = props;\n  const [state, setState] = React.useState(defaultValue);\n  const nowValue = typeof value === 'undefined' ? state : value;\n  React.useEffect(() => {\n    setValueCallback(setState);\n  }, [setValueCallback, setState]);\n  React.useEffect(() => {\n    getValueCallback(() => options[nowValue]);\n  }, [getValueCallback, nowValue, options]);\n  return __jsx(Flex, {\n    direction: direction,\n    mainAxis: \"flex-start\",\n    subSize: \"middle\",\n    id: id,\n    className: concat(className, styles.radio),\n    style: style\n  }, options.map(option => __jsx(\"div\", {\n    key: option.key,\n    className: styles.option,\n    onClick: () => {\n      onChange(option.key, option.value);\n      setState(option.key);\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    checked: option.key === nowValue\n  }), option.key)));\n}","map":null,"metadata":{},"sourceType":"module"}