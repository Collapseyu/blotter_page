{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport { Flex } from '@/components/container';\nimport { TransfromOptions } from '../';\nimport styles from './radio.module.scss';\nexport default function Radio(props) {\n  const {\n    direction = 'LR',\n    options,\n    defaultKey = '',\n    selectedKey,\n    onChange = () => {},\n    setKeyCallback = () => {},\n    getKeyCallback = () => {},\n    className,\n    style,\n    id\n  } = props;\n  const opts = React.useMemo(() => TransfromOptions(options), [options]);\n  const [state, setState] = React.useState(defaultKey);\n  const nowKey = typeof selectedKey === 'undefined' ? state : selectedKey;\n  React.useEffect(() => {\n    setKeyCallback(setState);\n  }, [setKeyCallback, setState]);\n  React.useEffect(() => {\n    getKeyCallback(() => options[nowKey]);\n  }, [getKeyCallback, nowKey, options]);\n  return __jsx(Flex, {\n    direction: direction,\n    mainAxis: \"flex-start\",\n    subSize: \"middle\",\n    id: id,\n    className: concat(className, styles.radio),\n    style: style\n  }, opts.map(option => __jsx(\"div\", {\n    key: option.key,\n    className: styles.option,\n    onClick: () => {\n      onChange(option.key, option.value);\n      setState(option.key);\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    checked: option.key === nowKey,\n    onChange: () => {}\n  }), option.key)));\n}","map":null,"metadata":{},"sourceType":"module"}