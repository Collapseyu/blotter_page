{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Body from './body';\nimport { concat } from '@/utils/component';\nimport styles from './popover.less';\nimport shadowStyles from '@/styles/shadow.less';\nexport default function Popover(props) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'top' : _props$placement,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? ['hover'] : _props$trigger,\n      component = props.component,\n      className = props.className,\n      style = props.style,\n      popoverClass = props.popoverClass,\n      popoverStyle = props.popoverStyle,\n      children = props.children,\n      _props$closeDelay = props.closeDelay,\n      closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,\n      _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? true : _props$arrow,\n      _props$card = props.card,\n      card = _props$card === void 0 ? false : _props$card,\n      _props$shadow = props.shadow,\n      shadow = _props$shadow === void 0 ? false : _props$shadow,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug;\n  var ref = React.useRef();\n  var childRef = React.useRef();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pos = _React$useState2[0],\n      setPos = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1]; //   const [willClose, setWillClose] = React.useState(false);\n\n\n  var getPosition = React.useCallback(function () {\n    if (!ref.current || !childRef.current) return {\n      top: -99999,\n      left: -99999\n    };\n    var origin = ref.current.getBoundingClientRect();\n    var child = childRef.current.getBoundingClientRect();\n    return {\n      top: placement === 'top' ? origin.top + window.pageYOffset - child.height - 10 : placement === 'bottom' ? origin.top + window.pageYOffset + origin.height + 10 : origin.top + window.pageYOffset - (child.height - origin.height) / 2,\n      left: placement === 'left' ? origin.left + window.pageXOffset - child.width - 10 : placement === 'right' ? origin.left + window.pageXOffset + origin.width + 10 : origin.left + window.pageXOffset - (child.width - origin.width) / 2\n    };\n  }, [ref, childRef]);\n  var classList = React.useMemo(function () {\n    return [styles.popover, arrow ? styles.arrow : '', styles[placement], popoverClass, show ? styles.show : '', card ? styles.card : '', shadow ? shadowStyles.shadow : ''];\n  }, [placement, popoverClass, show, arrow, card, shadow]);\n  var click = React.useMemo(function () {\n    return trigger.indexOf('click') !== -1;\n  }, [trigger]);\n  var hover = React.useMemo(function () {\n    return trigger.indexOf('hover') !== -1;\n  }, [trigger]);\n  var willClose = false;\n\n  var moveIn = function moveIn() {\n    if (!show) setPos(getPosition());\n    setShow(true);\n    willClose = false;\n  };\n\n  var moveOut = function moveOut() {\n    if (debug) return;\n    willClose = true;\n    setTimeout(function () {\n      if (willClose) {\n        setPos({});\n        setShow(false);\n      }\n    }, closeDelay);\n  };\n\n  return __jsx(\"div\", {\n    ref: ref,\n    className: concat(styles.popover_origin, className),\n    style: style,\n    onClick: function onClick() {\n      if (click) moveIn();\n    },\n    onMouseEnter: function onMouseEnter() {\n      if (hover) moveIn();\n    },\n    onMouseLeave: moveOut\n  }, __jsx(Body, null, __jsx(\"div\", {\n    ref: childRef,\n    className: concat.apply(void 0, _toConsumableArray(classList)),\n    style: _objectSpread(_objectSpread({}, pos), popoverStyle),\n    onMouseEnter: moveIn,\n    onMouseLeave: moveOut\n  }, component)), children);\n}","map":null,"metadata":{},"sourceType":"module"}