{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport TagPart from '@/components/tag';\nimport Card from '@/components/card';\nimport { Flex } from '@/components/container';\nimport { tags } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport { sortTagsByPinYin } from '@/utils/sort';\nimport styles from './tags.module.scss';\nimport textStyles from '@/styles/text.module.scss';\n\nclass Tags extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"renderTag\", tag => {\n      return __jsx(\"div\", {\n        key: tag.short,\n        className: styles.tag,\n        title: `${tag.name} 共有 ${tag.count} 篇文章`\n      }, __jsx(\"span\", null, tag.count > 99 ? '99+' : tag.count), __jsx(TagPart, {\n        tag: tag\n      }));\n    });\n\n    _defineProperty(this, \"renderGroup\", group => {\n      return group.tags.length > 0 ? __jsx(Card, {\n        key: group.title,\n        neumorphism: true\n      }, __jsx(Flex, {\n        direction: \"TB\",\n        subAxis: \"flex-start\",\n        fullWidth: true\n      }, __jsx(\"h2\", {\n        className: textStyles.color\n      }, group.title), __jsx(Flex, {\n        mainAxis: \"flex-start\",\n        mainSize: 15,\n        subSize: 15\n      }, group.tags.map(this.renderTag)))) : null;\n    });\n\n    this.state = {};\n  }\n\n  static async getInitialProps(args) {\n    var r = await tags();\n    return {\n      total: r.total,\n      tags: sortTagsByPinYin(r.tags)\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `标签列表|${context.blog_name}`))), __jsx(Flex, {\n      direction: \"TB\",\n      subAxis: \"flex-start\",\n      fullWidth: true\n    }, [__jsx(\"p\", {\n      key: \"total\"\n    }, \"\\u5171\\u6709 \", this.props.total, \" \\u4E2A\\u6807\\u7B7E\"), ...this.props.tags.map(this.renderGroup)]));\n  }\n\n}\n\n_defineProperty(Tags, \"defaultProps\", {\n  total: 0,\n  tags: []\n});\n\nexport default Tags;","map":null,"metadata":{},"sourceType":"module"}