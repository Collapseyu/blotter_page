{"ast":null,"code":"import _defineProperty from \"/github/workspace/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/github/workspace/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport Popover from '../popover';\nimport styles from './tooltip.module.scss';\nimport textStyles from '@/styles/text.module.scss';\nexport default function Tooltip(props) {\n  var _props$ellipsis = props.ellipsis,\n      ellipsis = _props$ellipsis === void 0 ? false : _props$ellipsis,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      _props$title = props.title,\n      title = _props$title === void 0 ? children.toString() : _props$title,\n      restProps = _objectWithoutProperties(props, [\"ellipsis\", \"className\", \"style\", \"children\", \"title\"]);\n\n  var classList = [className];\n  if (ellipsis) classList.push(textStyles.ellipsis);\n  return /*#__PURE__*/_jsx(Popover, _objectSpread(_objectSpread({\n    component: title,\n    className: concat.apply(void 0, classList),\n    style: style,\n    popoverClass: styles.tooltip\n  }, restProps), {}, {\n    children: children\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}