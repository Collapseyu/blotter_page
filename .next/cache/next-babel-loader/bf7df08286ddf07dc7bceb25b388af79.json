{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Icon } from '@ant-design/compatible';\nimport { Flex } from '@/components/container';\nimport { Left, Bar, User } from '@/components/svg';\nimport Button from '@/components/button';\nimport Avatar from '@/components/avatar';\nimport Popover, { Tooltip } from '@/components/popover';\nimport { logout } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport { setCookie } from '@/utils/storage';\nimport { defaultContext } from '@/utils/global';\nimport styles from './sider.less';\nimport shadowStyles from '@/styles/shadow.less';\nimport { LoginModal } from '../login';\nimport Card from '../card';\nexport default function (props) {\n  var user = props.user,\n      avatar = props.avatar,\n      big_screen = props.big_screen,\n      _theme = props.theme,\n      menus = props.menus,\n      pathname = props.pathname,\n      callback = props.callback;\n  var theme = _theme === 'default' ? 'light' : 'dark';\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loginModal = _React$useState4[0],\n      setLoginModal = _React$useState4[1];\n\n  var onLoginClick = function onLoginClick() {\n    return setLoginModal(true);\n  };\n\n  var onLogoutClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var r;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return logout();\n\n            case 2:\n              r = _context.sent;\n              ShowNotification(r);\n              setCookie('token', '', 0);\n              callback({\n                user: defaultContext.user\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onLogoutClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, collapsed ? null : __jsx(\"div\", {\n    className: [styles.dimmed].join(' '),\n    onClick: function onClick() {\n      return setCollapsed(true);\n    }\n  }), __jsx(Flex, {\n    className: [styles.sider].concat(_toConsumableArray(collapsed ? [styles.sider_collapsed] : [])).join(' '),\n    mainAxis: \"flex-start\",\n    subAxis: \"flex-start\"\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    direction: \"TB\",\n    wrap: false,\n    className: [shadowStyles.shadow, styles.siderbar].join(' '),\n    style: {\n      width: collapsed ? big_screen ? 80 : 0 : 200\n    }\n  }, __jsx(\"div\", null), __jsx(\"img\", {\n    src: avatar,\n    width: \"100%\",\n    height: \"100%\",\n    style: {\n      background: 'white',\n      borderRadius: '100px',\n      maxWidth: '120px'\n    }\n  }), !user.existed ? __jsx(\"a\", {\n    onClick: onLoginClick\n  }, __jsx(Avatar, null, __jsx(User, null))) : __jsx(Popover, {\n    placement: \"right\",\n    trigger: ['click', 'hover'],\n    popoverClass: shadowStyles.shadow,\n    popoverStyle: _defineProperty({\n      boxShadow: '5px 5px 30px var(--shadow)'\n    }, '--popover-backgroud', 'var(--background)'),\n    getOffset: function getOffset() {\n      return {\n        top: document.documentElement.scrollTop\n      };\n    },\n    component: __jsx(Card, {\n      style: {\n        background: 'var(--background)',\n        maxWidth: 200\n      }\n    }, __jsx(Flex, {\n      direction: \"TB\",\n      fullWidth: true\n    }, __jsx(\"strong\", null, user.username), __jsx(Flex, null, __jsx(Link, {\n      href: \"/user/[username]\",\n      as: \"/user/\".concat(user.username)\n    }, __jsx(\"a\", null, \"\\u8BBE\\u7F6E\")), __jsx(\"a\", {\n      onClick: onLogoutClick\n    }, \"\\u767B\\u51FA\"), (user.permission & 1) != 0 ? __jsx(Link, {\n      href: \"/admin\"\n    }, __jsx(\"a\", null, \"\\u7BA1\\u7406\")) : null)))\n  }, __jsx(\"span\", {\n    style: {\n      cursor: 'pointer'\n    }\n  }, user.avatar ? __jsx(Avatar, {\n    src: user.avatar\n  }) : __jsx(Avatar, null, __jsx(User, null)))), __jsx(Flex.Item, {\n    style: {\n      width: '100%'\n    }\n  }, __jsx(Menus, {\n    menus: menus,\n    theme: theme,\n    pathname: pathname\n  }))), __jsx(\"div\", {\n    className: styles.button_wrapper\n  }, __jsx(Button, {\n    primary: true,\n    circle: true,\n    icon: collapsed ? __jsx(Bar, null) : __jsx(Left, null),\n    shadow: true,\n    onClick: function onClick() {\n      return setCollapsed(!collapsed);\n    }\n  }))), __jsx(LoginModal, {\n    show: loginModal,\n    onCancel: function onCancel() {\n      return setLoginModal(false);\n    },\n    callback: function callback(success) {\n      if (success) setLoginModal(false);\n    }\n  }));\n}\n\nfunction Menus(props) {\n  var menus = props.menus,\n      theme = props.theme,\n      pathname = props.pathname;\n  return __jsx(Flex, {\n    direction: \"TB\",\n    className: styles.menu\n  }, menus.map(function (item) {\n    var menuItem = __jsx(\"div\", null, __jsx(\"span\", {\n      className: styles.prefix\n    }, item.icon ? __jsx(Icon, {\n      type: item.icon\n    }) : null), __jsx(\"span\", {\n      className: styles.text\n    }, item.name));\n\n    return __jsx(\"li\", {\n      key: item.link,\n      className: item.link === pathname ? styles.active : ''\n    }, __jsx(Tooltip, {\n      placement: \"right\",\n      title: item.name,\n      getOffset: function getOffset() {\n        return {\n          top: document.documentElement.scrollTop\n        };\n      }\n    }, item.link.length > 0 && item.link[0] !== '/' ? __jsx(\"a\", {\n      target: \"_blank\",\n      href: item.link\n    }, menuItem) : __jsx(Link, {\n      href: item.link\n    }, __jsx(\"a\", null, menuItem))));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}