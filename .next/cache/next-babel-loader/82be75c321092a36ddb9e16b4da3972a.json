{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport Input, { CheckBox } from '@/components/input';\nimport TagSearch from '@/components/tag_search';\nimport Tag from '@/components/tag';\nimport { Search } from '@/components/svg';\nconst checkboxs = [{\n  key: 'title',\n  name: '标题'\n}, {\n  key: 'abstract',\n  name: '摘要'\n}, {\n  key: 'raw',\n  name: '内容'\n}];\n\nfunction RenderTagSearch(props) {\n  const {\n    tags,\n    onChange\n  } = props;\n  return __jsx(TagSearch, {\n    tags: tags,\n    onAdd: tag => onChange(tags.concat([tag])),\n    onDelete: tag => onChange(tags.filter(t => t.id !== tag.id))\n  });\n}\n\nfunction PostSearch(props, ref) {\n  const {\n    searchWord,\n    onSearchChange,\n    checkedKeys,\n    onCheckChange,\n    withTags,\n    withoutTags,\n    onTagChange,\n    tags\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"searchWord\", \"onSearchChange\", \"checkedKeys\", \"onCheckChange\", \"withTags\", \"withoutTags\", \"onTagChange\", \"tags\"]);\n\n  return __jsx(Flex, _extends({}, restProps, {\n    ref: ref,\n    direction: \"TB\",\n    fullWidth: true,\n    subAxis: \"flex-start\"\n  }), __jsx(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\u641C\\u7D22\\u6587\\u7AE0\",\n    onChange: onSearchChange,\n    prefix: __jsx(Search, null),\n    size: \"large\"\n  }), __jsx(Flex, {\n    mainAxis: \"flex-start\"\n  }, ['搜索范围', ...checkboxs.map(item => __jsx(CheckBox, {\n    key: item.key,\n    value: checkedKeys.indexOf(item.key) !== -1,\n    onChange: checked => onCheckChange(checked ? checkedKeys.concat([item.key]) : checkedKeys.filter(t => t != item.key))\n  }, item.name))]), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\",\n    subSize: \"small\"\n  }, __jsx(\"span\", null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u641C\\u7D22\\uFF1A\"), __jsx(Flex.Item, null, __jsx(RenderTagSearch, {\n    tags: withTags,\n    onChange: tags => onTagChange('with', tags)\n  }))), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\",\n    subSize: \"small\"\n  }, __jsx(\"span\", null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u6392\\u9664\\uFF1A\"), __jsx(Flex.Item, null, __jsx(RenderTagSearch, {\n    tags: withoutTags,\n    onChange: tags => onTagChange('without', tags)\n  }))), !!tags && __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subSize: \"middle\"\n  }, tags.map(tag => __jsx(Tag, {\n    tag: tag,\n    key: tag.id\n  }))));\n}\n\nexport default /*#__PURE__*/React.forwardRef(PostSearch);","map":null,"metadata":{},"sourceType":"module"}