{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from '@/utils/moment';\nimport { concat } from '@/utils/component';\nimport styles from './timer.less';\n\nvar Timer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timer, _React$Component);\n\n  var _super = _createSuper(Timer);\n\n  function Timer(props) {\n    var _this;\n\n    _classCallCheck(this, Timer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"timer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"begin\", function () {\n      _this.setState({\n        target: _this.props.target\n      });\n\n      _this.stop();\n\n      _this.timer = setInterval(function () {\n        var now = moment.now();\n\n        if (_this.props.target <= now) {\n          _this.stop();\n\n          var newString = _this.props.onFinished();\n\n          if (typeof newString === 'string') _this.setState({\n            f: newString\n          });\n          return;\n        }\n\n        _this.setState({\n          f: _this.props.format(now, _this.props.target)\n        });\n      }, _this.props.ms);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (!!_this.timer) {\n        clearInterval(_this.timer);\n        _this.timer = undefined;\n      }\n    });\n\n    _this.state = {\n      f: '',\n      target: 0\n    };\n    return _this;\n  }\n\n  _createClass(Timer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.begin();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.target !== this.props.target) {\n        this.begin();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          target = _this$props.target,\n          format = _this$props.format,\n          onFinished = _this$props.onFinished,\n          ms = _this$props.ms,\n          title = _this$props.title,\n          className = _this$props.className,\n          restProps = _objectWithoutProperties(_this$props, [\"target\", \"format\", \"onFinished\", \"ms\", \"title\", \"className\"]);\n\n      return __jsx(\"div\", _extends({}, restProps, {\n        className: concat(styles.timer, className)\n      }), __jsx(\"div\", {\n        className: styles.title\n      }, title), __jsx(\"div\", {\n        className: styles.time\n      }, this.state.f));\n    }\n  }]);\n\n  return Timer;\n}(React.Component);\n\n_defineProperty(Timer, \"staticProps\", {\n  target: 0,\n  ms: 100,\n  format: function format() {\n    return '';\n  },\n  onFinished: function onFinished() {},\n  title: ''\n});\n\nexport { Timer as default };","map":null,"metadata":{},"sourceType":"module"}