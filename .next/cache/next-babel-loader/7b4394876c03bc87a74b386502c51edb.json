{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport Body from '../body';\nimport Card from '@/components/card';\nimport { Close } from '@/components/svg';\nimport Button from '@/components/button';\nimport styles from './modal.module.scss';\n\nvar ModalContent = function ModalContent(props) {\n  var onClose = props.onClose,\n      className = props.className,\n      style = props.style,\n      children = props.children;\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: concat(className, styles.modal),\n    style: style\n  }, __jsx(Card, {\n    style: {\n      background: 'var(--background)'\n    }\n  }, !!onClose ? __jsx(Button, {\n    icon: __jsx(Close, null),\n    style: {\n      position: 'relative',\n      top: -15,\n      right: -15,\n      marginBottom: -15,\n      \"float\": 'right'\n    },\n    onClick: function onClick() {\n      return onClose();\n    }\n  }) : null, __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    }\n  }, children))), __jsx(\"div\", {\n    className: styles.dimmed,\n    onClick: function onClick() {\n      return onClose();\n    }\n  }));\n};\n\nvar Modal = function Modal(props) {\n  var _props$show = props.show,\n      show = _props$show === void 0 ? true : _props$show;\n  return show ? __jsx(Body, null, __jsx(ModalContent, props)) : null;\n};\n\nvar info = function info(props) {\n  var _Body$Insert = Body.Insert(function (_ref) {\n    var update = _ref.update,\n        remove = _ref.remove;\n    return __jsx(ModalContent, _extends({}, props, {\n      onClose: remove\n    }));\n  }),\n      update = _Body$Insert.update,\n      remove = _Body$Insert.remove;\n\n  return {\n    update: update,\n    remove: remove\n  };\n};\n\nexport default Object.assign(Modal, {\n  info: info\n});","map":null,"metadata":{},"sourceType":"module"}