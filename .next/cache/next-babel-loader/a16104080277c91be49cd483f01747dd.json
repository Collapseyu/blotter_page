{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Edit } from '@/components/svg';\nimport { concat } from '@/utils/component';\nimport { waitUntil } from '@/utils/debounce';\nimport randomString from '@/utils/random';\nimport shadowStyles from '@/styles/shadow.module.scss';\nimport styles from './textarea.module.scss';\nexport default function TextArea(props) {\n  const {\n    defaultValue,\n    value,\n    placeholder = '',\n    size = 'middle',\n    label = '',\n    autoFocus = false,\n    lablePlacement = 'top',\n    rows,\n    debounce = 200,\n    disabled = false,\n    editable = true,\n    onChange = () => {},\n    getValueCallback = () => {},\n    setValueCallback = () => {},\n    onBlur,\n    hint,\n    style,\n    className,\n    transform = false\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"defaultValue\", \"value\", \"placeholder\", \"size\", \"label\", \"autoFocus\", \"lablePlacement\", \"rows\", \"debounce\", \"disabled\", \"editable\", \"onChange\", \"getValueCallback\", \"setValueCallback\", \"onBlur\", \"hint\", \"style\", \"className\", \"transform\"]);\n\n  const ref = React.useRef();\n  const key = React.useMemo(() => randomString(), []);\n  React.useEffect(() => getValueCallback(() => !!ref ? ref.current.value : ''), [ref, getValueCallback]);\n  /*\n     TODO: 尽管原则上 setValueCallback 不需要判断\n     但是在 ctypto.tsx 页面切换 UInt8Array 输入框的单选框时，在成功 setValue 后会奇怪地调用一次 setValue(undefined)，导致出错\n     因此这里按道理应该进行一次判断，但是目前还未曾得知为什么会有一次错误的调用\n     */\n\n  React.useEffect(() => setValueCallback(value => {\n    if (!!ref && !!ref.current && typeof value === 'string') ref.current.value = value;\n  }), [ref, setValueCallback]);\n  const [showInput, setShowInput] = React.useState(false);\n  React.useEffect(() => {\n    if (!!ref && !!ref.current && typeof value === 'string') ref.current.value = value;\n  }, [ref, value, showInput]);\n  const onInputChange = React.useCallback(e => {\n    const value = e.target.value;\n\n    const cb = () => onChange(value);\n\n    if (debounce > 0) waitUntil(key, cb, debounce);else cb();\n  }, [debounce, onChange]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: concat(styles.wrapper, className, styles[size], styles[lablePlacement]),\n    style: style,\n    onBlur: () => {\n      if (transform) setShowInput(false);\n      if (!!onBlur) onBlur();\n    },\n    onClick: () => {\n      if (transform) setShowInput(true);\n    },\n    children: !transform || transform && showInput ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [!!label ? /*#__PURE__*/_jsx(\"div\", {\n        className: styles.label,\n        children: label\n      }) : null, /*#__PURE__*/_jsxs(\"div\", {\n        className: concat(styles.inner, ...(disabled ? ['disabled'] : [])),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: concat(styles.textarea, shadowStyles.neumorphism_inset),\n          children: /*#__PURE__*/_jsx(\"textarea\", _objectSpread(_objectSpread({}, restProps), {}, {\n            ref: ref,\n            defaultValue: defaultValue,\n            onChange: onInputChange,\n            placeholder: placeholder,\n            readOnly: !editable,\n            autoFocus: autoFocus,\n            rows: rows\n          }))\n        }), !!hint ? /*#__PURE__*/_jsx(\"div\", {\n          className: styles.hint,\n          children: hint\n        }) : null]\n      })]\n    }) : /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.transform,\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: styles.transform_value,\n        children: value\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: styles.transform_icon,\n        children: /*#__PURE__*/_jsx(Edit, {})\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}