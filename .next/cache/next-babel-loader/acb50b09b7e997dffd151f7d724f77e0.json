{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Card from '@/components/card';\nimport Input, { DatePicker } from '@/components/input';\nimport Popover from '@/components/popover';\nimport { Plus, Delete, Save } from '@/components/svg';\nimport TravelMap from '@/components/travel_map';\nimport { Context } from '@/utils/global';\nimport { posts, tagsSearch, travels_set, travels_get } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport { Flex } from '@/components/container';\nimport Button from '@/components/button';\nimport Loading from '@/components/loading';\n\nclass Travel extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"geocoder\", void 0);\n\n    _defineProperty(this, \"getPosition\", (value, callback) => {\n      const AMap = window.AMap;\n      const ins = this.state.ins;\n\n      if (!this.geocoder) {\n        if (!AMap) {\n          ShowNotification({\n            success: false,\n            title: '发生错误',\n            content: '请等待地图组件加载完毕'\n          });\n          throw 'Amap not initial.';\n        }\n\n        AMap.plugin('AMap.Geocoder', () => {\n          this.geocoder = new AMap.Geocoder({});\n        });\n      }\n\n      this.geocoder.getLocation(value, function (status, result) {\n        if (status === 'complete' && result.geocodes.length) {\n          const {\n            lng,\n            lat\n          } = result.geocodes[0].location;\n          callback(lat, lng);\n          ins.setZoomAndCenter(15, [lng, lat]);\n        } else {\n          ShowNotification({\n            success: false,\n            title: '发生错误',\n            content: '未找到对应地址'\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"getIns\", () => {\n      if (!!this.state.ins) return this.state.ins;\n      ShowNotification({\n        success: false,\n        title: '发生错误',\n        content: '请等待地图组件加载完毕'\n      });\n      throw 'Amap not initial.';\n    });\n\n    _defineProperty(this, \"CityInput\", props => {\n      const {\n        index,\n        name,\n        label\n      } = props;\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Input, {\n          label: label,\n          placeholder: label,\n          value: this.state.cities[index][name].toString(),\n          onChange: value => {\n            this.setCity(index, pre => _objectSpread(_objectSpread({}, pre), {}, {\n              [name]: name === 'name' ? value : parseFloat(value)\n            }));\n          }\n        })\n      });\n    });\n\n    _defineProperty(this, \"setCity\", (index, callback) => {\n      this.setState(state => {\n        var {\n          cities\n        } = state;\n        cities[index] = _objectSpread(_objectSpread({}, cities[index]), callback(cities[index]));\n        return {\n          cities\n        };\n      });\n    });\n\n    _defineProperty(this, \"setTravel\", (index, index2, callback) => {\n      this.setCity(index, city => {\n        city.travels[index2] = _objectSpread(_objectSpread({}, city.travels[index2]), callback(city.travels[index2]));\n        return city;\n      });\n    });\n\n    _defineProperty(this, \"renderCity\", (city, index) => {\n      const CityInput = this.CityInput;\n\n      const onSearch = async value => {\n        const r = await posts({\n          search: value,\n          search_fields: 'title',\n          with_tags: this.state.tagID\n        });\n        this.setState({\n          search: r.posts\n        });\n      };\n\n      return /*#__PURE__*/_jsxs(Flex, {\n        direction: \"TB\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxs(Flex, {\n          children: [/*#__PURE__*/_jsx(CityInput, {\n            index: index,\n            name: \"name\",\n            label: \"\\u5730\\u70B9\"\n          }), /*#__PURE__*/_jsx(CityInput, {\n            index: index,\n            name: \"lat\",\n            label: \"\\u7ECF\\u5EA6\"\n          }), /*#__PURE__*/_jsx(CityInput, {\n            index: index,\n            name: \"lng\",\n            label: \"\\u7EAC\\u5EA6\"\n          }), /*#__PURE__*/_jsx(CityInput, {\n            index: index,\n            name: \"zoom\",\n            label: \"\\u7F29\\u653E\\u500D\\u6570\"\n          }), /*#__PURE__*/_jsx(Button, {\n            neumorphism: true,\n            size: \"small\",\n            onClick: () => {\n              const name = this.state.cities[index].name;\n              this.getPosition(name, (lat, lng) => {\n                this.setCity(index, pre => ({\n                  lat,\n                  lng\n                }));\n              });\n            },\n            children: \"\\u641C\\u7D22\\u5750\\u6807\"\n          }), /*#__PURE__*/_jsx(Popover, {\n            card: true,\n            shadow: true,\n            trigger: ['click'],\n            component: /*#__PURE__*/_jsx(Card, {\n              children: /*#__PURE__*/_jsxs(Flex, {\n                children: [\"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\", /*#__PURE__*/_jsx(Button, {\n                  danger: true,\n                  primary: true,\n                  neumorphism: true,\n                  size: \"small\",\n                  onClick: () => {\n                    this.setState(state => ({\n                      cities: state.cities.filter((_, idx) => idx != index)\n                    }));\n                  },\n                  children: \"\\u5220\\u9664\"\n                })]\n              })\n            }),\n            children: /*#__PURE__*/_jsx(Button, {\n              danger: true,\n              neumorphism: true,\n              size: \"small\",\n              prefix: /*#__PURE__*/_jsx(Delete, {}),\n              children: \"\\u5220\\u9664\"\n            })\n          }), /*#__PURE__*/_jsx(Button, {\n            neumorphism: true,\n            size: \"small\",\n            prefix: /*#__PURE__*/_jsx(Plus, {}),\n            onClick: () => {\n              this.setCity(index, pre => ({\n                travels: pre.travels.concat({\n                  time: 0,\n                  link: ''\n                }).sort((a, b) => a.time - b.time)\n              }));\n            },\n            children: \"\\u65B0\\u5EFA\"\n          })]\n        }), /*#__PURE__*/_jsx(Flex, {\n          direction: \"TB\",\n          fullWidth: true,\n          children: city.travels.map((item, index2) => /*#__PURE__*/_jsxs(Flex, {\n            style: {\n              marginLeft: 50\n            },\n            children: [/*#__PURE__*/_jsx(DatePicker, {\n              label: \"\\u65E5\\u671F\",\n              value: item.time * 1000,\n              style: {\n                width: '100%'\n              },\n              onChange: time => {\n                this.setTravel(index, index2, pre => _objectSpread(_objectSpread({}, pre), {}, {\n                  time: time / 1000\n                }));\n              },\n              type: \"date\"\n            }), /*#__PURE__*/_jsx(Input, {\n              label: \"\\u6587\\u7AE0\",\n              placeholder: \"\\u641C\\u7D22\\u6E38\\u8BB0\\u6587\\u7AE0\",\n              value: item.link,\n              style: {\n                width: '100%'\n              },\n              onChange: onSearch,\n              onSelect: (key, value) => this.setTravel(index, index2, pre => _objectSpread(_objectSpread({}, pre), {}, {\n                link: value\n              })),\n              options: this.state.search.map(item => ({\n                key: item.title,\n                value: item.url\n              }))\n            }), /*#__PURE__*/_jsx(Popover, {\n              card: true,\n              shadow: true,\n              trigger: ['click'],\n              component: /*#__PURE__*/_jsx(Card, {\n                children: /*#__PURE__*/_jsxs(Flex, {\n                  children: [\"\\u786E\\u8BA4\\u5220\\u9664\\uFF1F\", /*#__PURE__*/_jsx(Button, {\n                    danger: true,\n                    primary: true,\n                    neumorphism: true,\n                    size: \"small\",\n                    onClick: () => {\n                      this.setCity(index, pre => ({\n                        travels: pre.travels.filter((_, idx) => idx != index2)\n                      }));\n                    },\n                    children: \"\\u5220\\u9664\"\n                  })]\n                })\n              }),\n              children: /*#__PURE__*/_jsx(Button, {\n                danger: true,\n                neumorphism: true,\n                size: \"small\",\n                children: \"\\u5220\\u9664\"\n              })\n            })]\n          }, index2))\n        })]\n      }, index);\n    });\n\n    this.state = {\n      ins: undefined,\n      search: [],\n      tagID: undefined,\n      loading: false,\n      cities: []\n    };\n  }\n\n  async componentDidMount() {\n    tagsSearch('游记').then(r => {\n      const tags = r.tags.filter(item => item.name === '游记' && item.short === 'travels');\n      if (tags.length > 0) this.setState({\n        tagID: tags[0].id\n      });\n    }).catch(console.error);\n    this.setState({\n      loading: true\n    });\n    travels_get().then(r => this.setState({\n      cities: r.travels\n    })).catch(console.error).finally(() => this.setState({\n      loading: false\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Card, {\n      neumorphism: true,\n      children: [/*#__PURE__*/_jsx(Context.Consumer, {\n        children: context => /*#__PURE__*/_jsx(Head, {\n          children: /*#__PURE__*/_jsx(\"title\", {\n            children: `游记编辑|${context.blog_name}`\n          })\n        })\n      }), /*#__PURE__*/_jsxs(Flex, {\n        direction: \"TB\",\n        fullWidth: true,\n        mainAxis: \"flex-end\",\n        children: [/*#__PURE__*/_jsx(TravelMap, {\n          cities: this.state.cities,\n          onCreate: ins => this.setState({\n            ins\n          })\n        }), /*#__PURE__*/_jsxs(Flex, {\n          mainAxis: \"space-around\",\n          children: [/*#__PURE__*/_jsx(Button, {\n            neumorphism: true,\n            loading: this.state.loading,\n            onClick: async () => {\n              this.setState({\n                loading: true\n              });\n              travels_set(this.state.cities).then(ShowNotification).catch(console.error).finally(() => this.setState({\n                loading: false\n              }));\n            },\n            prefix: /*#__PURE__*/_jsx(Save, {}),\n            children: \"\\u4FDD\\u5B58\"\n          }), /*#__PURE__*/_jsx(Button, {\n            primary: true,\n            neumorphism: true,\n            onClick: () => this.setState(state => ({\n              cities: [{\n                name: '',\n                lng: 0,\n                lat: 0,\n                zoom: 15,\n                travels: []\n              }, ...state.cities]\n            })),\n            prefix: /*#__PURE__*/_jsx(Plus, {}),\n            children: \"\\u65B0\\u5EFA\\u57CE\\u5E02\"\n          })]\n        }), /*#__PURE__*/_jsx(Loading, {\n          loading: this.state.loading,\n          children: /*#__PURE__*/_jsx(Flex, {\n            direction: \"TB\",\n            fullWidth: true,\n            children: this.state.cities.map(this.renderCity)\n          })\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default Travel;","map":null,"metadata":{},"sourceType":"module"}