{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './tabs.less';\n\nfunction Tabs(props) {\n  var selected = props.selected,\n      defaultSelected = props.defaultSelected,\n      children = props.children,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function () {\n    return [];\n  } : _props$onChange,\n      className = props.className,\n      _props$keepInDOM = props.keepInDOM,\n      keepInDOM = _props$keepInDOM === void 0 ? false : _props$keepInDOM,\n      restProps = _objectWithoutProperties(props, [\"selected\", \"defaultSelected\", \"children\", \"onChange\", \"className\", \"keepInDOM\"]);\n\n  var childList = React.Children.toArray(children).filter(function (child) {\n    return !!child && !!child.type && child.type.displayName === TabsItem.displayName;\n  });\n  var itemProps = childList.map(function (item) {\n    return item.props;\n  });\n\n  var _React$useState = React.useState(typeof defaultSelected === 'undefined' ? itemProps.length > 0 ? itemProps[0].name : '' : defaultSelected),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var nowSelected = typeof selected === 'undefined' ? state : selected;\n  var nowChildren = childList.filter(function (item) {\n    return item.props.name === nowSelected;\n  });\n  return __jsx(Flex, _extends({}, restProps, {\n    direction: \"TB\",\n    fullWidth: true,\n    className: concat(styles.tabs, className)\n  }), __jsx(Flex, {\n    className: styles.nav,\n    wrap: false,\n    mainAxis: \"space-around\"\n  }, itemProps.map(function (item) {\n    return __jsx(Flex.Item, {\n      key: item.name,\n      className: concat(styles.nav_item, nowSelected === item.name ? styles.selected : '', !!item.disabled ? styles.disabled : ''),\n      onClick: function onClick() {\n        setState(item.name);\n        onChange(item.name);\n      }\n    }, item.name);\n  })), keepInDOM ? childList.map(function (item) {\n    return __jsx(\"div\", {\n      key: item.key,\n      style: item.props.name === nowSelected ? {} : {\n        display: 'none'\n      }\n    }, item);\n  }) : nowChildren.length > 0 ? nowChildren[0] : null);\n}\n\nexport function TabsItem(props) {\n  var name = props.name,\n      disabled = props.disabled,\n      id = props.id,\n      children = props.children,\n      className = props.className,\n      style = props.style;\n  return __jsx(\"div\", {\n    className: concat(className),\n    style: style\n  }, children);\n}\nTabsItem.displayName = 'TabsItem';\nexport default Object.assign(Tabs, {\n  Item: TabsItem\n});","map":null,"metadata":{},"sourceType":"module"}