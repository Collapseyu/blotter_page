{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Triangle, Filter } from '@/components/svg';\nimport Button from '@/components/button';\nimport { CheckBox } from '@/components/input';\nimport { Flex } from '@/components/container';\nimport { Left, Loading } from '@/components/svg';\nimport Pagination from '@/components/pagination';\nimport { Tooltip, Modal } from '@/components/popover';\nimport DragableRow from './row';\nimport { concat } from '@/utils/component';\nimport randomString from '@/utils/random';\nimport styles from './table.module.scss';\nimport textStyles from '@/styles/text.module.scss';\nvar defaultState = {\n  page: 1,\n  size: 10,\n  sortKey: '',\n  sortAscending: false,\n  expanded: {},\n  filterKey: [],\n  filterValue: {}\n};\n\nfunction stateReducer(state, action) {\n  switch (action.name) {\n    case 'init':\n      {\n        return defaultState;\n      }\n\n    case 'page':\n      {\n        var _page2 = action.page,\n            _size2 = action.size;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          page: _page2,\n          size: _size2,\n          expanded: {}\n        });\n      }\n\n    case 'sort':\n      {\n        var sortKey = action.sortKey,\n            sortAscending = action.sortAscending;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          page: 1,\n          sortKey: sortKey,\n          sortAscending: sortAscending,\n          expanded: {}\n        });\n      }\n\n    case 'expand':\n      {\n        var index = action.index;\n        if (index === 'init') return _objectSpread(_objectSpread({}, state), {}, {\n          expanded: {}\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          expanded: _objectSpread(_objectSpread({}, state.expanded), {}, _defineProperty({}, index, !state.expanded[index]))\n        });\n      }\n\n    case 'filter-key':\n      {\n        var _key = action.key,\n            enable = action.enable;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filterKey: enable ? state.filterKey.concat(_key) : state.filterKey.filter(function (item) {\n            return item !== _key;\n          })\n        });\n      }\n\n    case 'filter-value':\n      {\n        var _key2 = action.key,\n            _value = action.value;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filterValue: _objectSpread(_objectSpread({}, state.filterValue), {}, _defineProperty({}, _key2, _value))\n        });\n      }\n  }\n}\n\nexport default function Table(props) {\n  var columns = props.columns,\n      data = props.data,\n      style = props.style,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      _props$defaultOrder = props.defaultOrder,\n      defaultOrder = _props$defaultOrder === void 0 ? {\n    sortKey: '',\n    ascending: false\n  } : _props$defaultOrder,\n      _props$pagination = props.pagination,\n      pagination = _props$pagination === void 0 ? false : _props$pagination,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      expand = props.expand,\n      onChange = props.onChange,\n      onMove = props.onMove; // 将简写的列拓展为标准的 Column 类型\n\n  var cols = React.useMemo(function () {\n    return columns.map(function (col) {\n      return typeof col === 'string' ? {\n        key: col\n      } : col;\n    });\n  }, [columns]);\n  var columnObject = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(cols.map(function (col) {\n      return _defineProperty({}, col.key, col);\n    }))));\n  }, [cols]);\n  var dragKey = React.useMemo(function () {\n    return randomString();\n  }, []);\n\n  var _React$useReducer = React.useReducer(stateReducer, _objectSpread(_objectSpread({}, defaultState), {}, {\n    sortKey: defaultOrder.sortKey,\n    sortAscending: defaultOrder.ascending,\n    page: typeof pagination !== 'boolean' ? pagination.page : 1,\n    size: typeof pagination !== 'boolean' ? pagination.size : 10\n  })),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      setState = _React$useReducer2[1];\n\n  var page = state.page,\n      size = state.size,\n      sortKey = state.sortKey,\n      sortAscending = state.sortAscending,\n      expanded = state.expanded,\n      filterKey = state.filterKey,\n      filterValue = state.filterValue; // 过滤器弹出框\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filterModal = _React$useState2[0],\n      setFilterModal = _React$useState2[1];\n\n  var filteredData = React.useMemo(function () {\n    var showData = data.concat([]);\n    if (typeof onChange === 'undefined') Object.keys(filterKey).map(function (key) {\n      return showData = columnObject[key] && columnObject[key].filter ? showData.filter(function (item, idx) {\n        return columnObject[key].filter.onFilter(filterValue[key], item, idx);\n      }) : showData;\n    });\n    return showData;\n  }, [data, onChange, columnObject, filterKey]);\n  var paginationProps = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, {\n      page: page,\n      size: size,\n      total: filteredData.length,\n      onChange: function onChange(page, size) {\n        setState({\n          name: 'page',\n          size: size,\n          page: page\n        });\n      }\n    }), typeof pagination !== 'boolean' ? pagination : {});\n  }, [pagination, page, size, filteredData, setState]); // 列表内容操作\n\n  var showData = React.useMemo(function () {\n    var showData = filteredData;\n\n    if (typeof onChange === 'undefined') {\n      if (!!columnObject && !!columnObject[sortKey]) {\n        var sorter = columnObject[sortKey].sorter;\n\n        if (typeof sorter === 'function') {\n          showData.sort(sorter);\n          if (!sortAscending) showData.reverse();\n        }\n      }\n\n      if (pagination === true || pagination !== false && !pagination.onChange) {\n        showData = showData.slice((paginationProps.page - 1) * paginationProps.size, paginationProps.page * paginationProps.size);\n      }\n    }\n\n    return showData;\n  }, [filteredData, onChange, columnObject, sortKey, sortAscending, pagination, paginationProps]);\n  var onTableChange = React.useCallback(function (_page, _size, _sortKey, _sortAscending, _filter) {\n    if (sortKey !== _sortKey || sortAscending !== _sortAscending) {\n      setState({\n        name: 'sort',\n        sortKey: _sortKey,\n        sortAscending: _sortAscending\n      });\n    } else {\n      setState({\n        name: 'page',\n        page: _page,\n        size: _size\n      });\n    }\n\n    if (!!onChange) onChange(_page, _size, _sortKey, _sortAscending, _filter);\n  }, [sortKey, sortAscending, setState, onChange]);\n\n  var _React$useMemo = React.useMemo(function () {\n    return !!onMove ? {\n      DndProviderComponent: DndProvider,\n      DragableRowComponent: DragableRow\n    } : {\n      DndProviderComponent: function DndProviderComponent(props) {\n        return props.children;\n      },\n      DragableRowComponent: function DragableRowComponent(props) {\n        return props.children;\n      }\n    };\n  }, [onMove]),\n      DndProviderComponent = _React$useMemo.DndProviderComponent,\n      DragableRowComponent = _React$useMemo.DragableRowComponent;\n\n  return __jsx(\"div\", {\n    className: concat(styles.table),\n    style: style\n  }, !!loading && __jsx(\"div\", {\n    className: styles.loading\n  }, loading === true ? __jsx(Loading, null) : loading), __jsx(\"div\", {\n    className: concat(styles.wrapper, !!loading ? styles.onloading : '')\n  }, __jsx(DndProviderComponent, {\n    backend: !!onMove && HTML5Backend\n  }, __jsx(\"table\", null, showHeader ? __jsx(\"thead\", {\n    style: {\n      visibility: showHeader ? 'visible' : 'hidden'\n    }\n  }, __jsx(\"tr\", null, !!expand ? __jsx(\"td\", null) : null, cols.map(function (col) {\n    return __jsx(\"th\", {\n      key: col.key,\n      style: col.headStyle\n    }, __jsx(\"div\", {\n      className: styles.title\n    }, !col.title ? col.key : typeof col.title === 'function' ? col.title(col.key) : col.title, !!col.sorter ? __jsx(\"span\", {\n      className: styles.sorter\n    }, __jsx(Button, {\n      className: styles.sorter_icon,\n      icon: __jsx(Triangle, null),\n      size: \"small\",\n      style: {\n        opacity: sortKey === col.key && sortAscending ? 1 : 0.25\n      },\n      onClick: function onClick() {\n        onTableChange(1, size, sortKey === col.key && sortAscending ? '' : col.key, true, Object.assign.apply(Object, [{}].concat(_toConsumableArray(filterKey.map(function (key) {\n          return {\n            key: filterValue[key]\n          };\n        })))));\n      }\n    }), __jsx(Button, {\n      className: styles.sorter_icon,\n      icon: __jsx(Triangle, {\n        style: {\n          transform: 'rotate(180deg)'\n        }\n      }),\n      size: \"small\",\n      style: {\n        opacity: sortKey === col.key && !sortAscending ? 1 : 0.25\n      },\n      onClick: function onClick() {\n        onTableChange(1, size, sortKey === col.key && sortAscending ? '' : col.key, false, Object.assign.apply(Object, [{}].concat(_toConsumableArray(filterKey.map(function (key) {\n          return {\n            key: filterValue[key]\n          };\n        })))));\n      }\n    })) : null, !!col.filter ? __jsx(\"span\", {\n      className: styles.filter\n    }, __jsx(Button, {\n      className: styles.sorter_icon,\n      icon: __jsx(Filter, null),\n      size: \"small\",\n      style: {\n        opacity: !!filterKey[col.key] ? 1 : 0.25\n      },\n      onClick: function onClick() {\n        setFilterModal(col);\n      }\n    })) : null));\n  }))) : null, __jsx(\"tbody\", null, showData.map(function (item, idx) {\n    return [__jsx(DragableRowComponent, {\n      key: idx,\n      index: idx,\n      dragKey: dragKey,\n      onMove: onMove\n    }, !!expand ? __jsx(\"td\", null, __jsx(Left, {\n      className: concat(styles.prefix, !expanded[idx] ? styles.close : ''),\n      onClick: function onClick() {\n        return setState({\n          name: 'expand',\n          index: idx\n        });\n      }\n    })) : null, cols.map(function (col) {\n      var content = !!col.render ? col.render(item[col.key], item, idx, data) : item[col.key];\n      var tooltip = !!col.tooltip ? col.tooltip === true ? content.toString() : typeof col.tooltip === 'function' ? col.tooltip(item[col.key], item, idx, data) : col.tooltip : undefined;\n      return __jsx(\"td\", {\n        key: col.key,\n        className: !!col.ellipsis ? textStyles.ellipsis : '',\n        style: _objectSpread(_objectSpread({}, {\n          width: col.width,\n          minWidth: col.minWidth,\n          maxWidth: col.maxWidth\n        }), col.style)\n      }, !!tooltip ? __jsx(Tooltip, {\n        title: tooltip,\n        style: {\n          display: 'inline'\n        }\n      }, content) : content);\n    })), !!expand && !!expanded[idx] ? __jsx(\"tr\", {\n      key: \"\".concat(idx, \"-expand\")\n    }, __jsx(\"td\", null), __jsx(\"td\", {\n      colSpan: cols.length\n    }, expand(item, idx))) : null];\n  })), cols.filter(function (col) {\n    return !!col.footer;\n  }).length > 0 ? __jsx(\"tfoot\", null, __jsx(\"tr\", null, !!expand ? __jsx(\"td\", null) : null, cols.map(function (col) {\n    return __jsx(\"td\", {\n      key: col.key,\n      style: col.footStyle\n    }, !col.footer ? null : typeof col.footer === 'function' ? col.footer(col.key) : col.footer);\n  }))) : null))), pagination !== false ? __jsx(Pagination, _extends({}, paginationProps, {\n    style: _objectSpread({\n      margin: 5\n    }, paginationProps.style),\n    onChange: function onChange(page, size) {\n      return onTableChange(page, size, sortKey, sortAscending, Object.assign.apply(Object, [{}].concat(_toConsumableArray(filterKey.map(function (key) {\n        return {\n          key: filterValue[key]\n        };\n      })))));\n    }\n  })) : null, __jsx(Modal, {\n    show: filterModal !== false,\n    onClose: function onClose() {\n      return setFilterModal(false);\n    }\n  }, filterModal === false ? null : __jsx(\"div\", null, __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subAxis: \"center\",\n    subSize: \"middle\"\n  }, filterModal.filter.filters.map(function (item) {\n    return __jsx(CheckBox, {\n      key: item,\n      value: !!filterValue[filterModal.key] && filterValue[filterModal.key].indexOf(item) !== -1,\n      onChange: function onChange(checked) {\n        var array = filterValue[filterModal.key];\n        if (!array) array = [];\n\n        if (checked) {\n          array.push(item);\n        } else {\n          array = array.filter(function (i) {\n            return i !== item;\n          });\n        }\n\n        setState({\n          name: 'filter-value',\n          key: filterModal.key,\n          value: array\n        });\n      }\n    }, item);\n  })), __jsx(Flex, {\n    mainAxis: \"flex-end\",\n    subAxis: \"center\",\n    subSize: \"middle\"\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setFilterModal(false);\n      setState({\n        name: 'filter-key',\n        enable: false,\n        key: filterModal.key\n      });\n      onTableChange(1, size, sortKey, sortAscending, Object.assign.apply(Object, [{}].concat(_toConsumableArray(filterKey.map(function (key) {\n        return {\n          key: filterValue[key]\n        };\n      })))));\n    }\n  }, \"\\u53D6\\u6D88\\u7B5B\\u9009\"), __jsx(Button, {\n    onClick: function onClick() {\n      setState({\n        name: 'filter-key',\n        enable: true,\n        key: filterModal.key\n      });\n      setFilterModal(false);\n      onTableChange(1, size, sortKey, sortAscending, Object.assign.apply(Object, [{}].concat(_toConsumableArray(filterKey.map(function (key) {\n        return {\n          key: filterValue[key]\n        };\n      })))));\n    }\n  }, \"\\u4F7F\\u7528\\u7B5B\\u9009\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}