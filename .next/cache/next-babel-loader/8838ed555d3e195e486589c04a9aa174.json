{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { Flex } from '@/components/container';\nimport Table from '@/components/table';\nimport Card from '@/components/card';\nimport Button from '@/components/button';\nimport Popover from '@/components/popover';\nimport Input, { CheckBox, DatePicker } from '@/components/input';\nimport { Delete, Plus, Save } from '@/components/svg';\nimport { Context } from '@/utils/global';\nimport { friends, friendsSet } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport randomString from '@/utils/random';\n\nclass AdminFriendList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async () => {\n      this.setState({\n        loading: true\n      });\n      var r = await friends();\n      this.setState({\n        data: r,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"renderEditableCell\", (idx, key) => {\n      return /*#__PURE__*/_jsx(Input, {\n        transform: true,\n        value: this.state.data[idx][key],\n        onChange: value => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data[idx][key] = value;\n            data.map(d => {\n              d.posts = d.posts.map(dd => dd);\n              return d;\n            });\n            return {\n              data\n            };\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"columns\", [{\n      title: '名称',\n      key: 'name',\n      tooltip: v => v,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'name')\n    }, {\n      title: '简介',\n      key: 'description',\n      tooltip: v => v,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'description')\n    }, {\n      title: '链接',\n      key: 'link',\n      tooltip: v => v,\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'link')\n    }, {\n      title: 'RSS',\n      key: 'rss',\n      tooltip: v => v,\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'rss')\n    }, {\n      title: '出错',\n      key: 'error',\n      minWidth: '5em',\n      maxWidth: '10em',\n      render: (_, __, idx) => /*#__PURE__*/_jsx(CheckBox, {\n        value: !!this.state.data[idx].error,\n        onChange: e => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data[idx].error = e;\n            data.map(d => {\n              d.posts = d.posts.map(dd => dd);\n              return d;\n            });\n            return {\n              data\n            };\n          });\n        }\n      })\n    }, {\n      title: '图片',\n      key: 'image',\n      tooltip: v => v,\n      maxWidth: '10em',\n      ellipsis: true,\n      render: (_, __, idx) => this.renderEditableCell(idx, 'image')\n    }, {\n      title: '图片预览',\n      key: 'image_preview',\n      render: (_, __, idx) => /*#__PURE__*/_jsx(\"img\", _objectSpread({\n        width: '50px',\n        src: this.state.data[idx].image\n      }, {\n        referrerPolicy: 'no-referrer'\n      }))\n    }, {\n      title: '操作',\n      key: 'op',\n      minWidth: '5em',\n      maxWidth: '10em',\n      render: (text, record, index) => /*#__PURE__*/_jsx(Popover, {\n        trigger: ['click'],\n        card: true,\n        shadow: true,\n        component: /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsxs(Flex, {\n            children: [\"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48?\", /*#__PURE__*/_jsx(Button, {\n              size: \"small\",\n              danger: true,\n              primary: true,\n              onClick: () => {\n                this.setState(state => {\n                  var data = state.data.filter(item => item.name !== record.name);\n                  data.map(d => {\n                    d.posts = d.posts.map(dd => dd);\n                    return d;\n                  });\n                  return {\n                    data\n                  };\n                });\n              },\n              children: \"\\u5220\\u9664\"\n            })]\n          })\n        }),\n        children: /*#__PURE__*/_jsx(Button, {\n          size: \"small\",\n          danger: true,\n          neumorphism: true,\n          prefix: /*#__PURE__*/_jsx(Delete, {}),\n          children: \"\\u5220\\u9664\"\n        })\n      })\n    }]);\n\n    _defineProperty(this, \"renderSubTableHead\", index => /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsx(Button, {\n        neumorphism: true,\n        primary: true,\n        onClick: () => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data[index].posts.unshift({\n              title: randomString(),\n              link: '',\n              time: 0\n            });\n            data.map(d => {\n              d.posts = d.posts.map(dd => dd);\n              return d;\n            });\n            return {\n              data\n            };\n          });\n        },\n        prefix: /*#__PURE__*/_jsx(Plus, {}),\n        children: \"\\u65B0\\u5EFA\\u6587\\u7AE0\"\n      })\n    }));\n\n    _defineProperty(this, \"renderTableHead\", () => /*#__PURE__*/_jsxs(Flex, {\n      mainAxis: \"flex-end\",\n      children: [/*#__PURE__*/_jsx(Button, {\n        neumorphism: true,\n        onClick: () => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data.push({\n              name: randomString(),\n              link: '',\n              image: '',\n              description: '',\n              rss: '',\n              posts: [],\n              error: false\n            });\n            data = data.map(d => {\n              d.posts = d.posts.map(dd => dd);\n              return d;\n            });\n            return {\n              data\n            };\n          });\n        },\n        children: \"\\u65B0\\u5EFA\\u8BA2\\u9605\"\n      }), /*#__PURE__*/_jsx(Button, {\n        neumorphism: true,\n        primary: true,\n        loading: this.state.submitLoading,\n        onClick: async () => {\n          this.setState({\n            submitLoading: true\n          });\n          var r = await friendsSet(this.state.data);\n          ShowNotification(r);\n          this.setState({\n            submitLoading: false\n          });\n        },\n        prefix: /*#__PURE__*/_jsx(Save, {}),\n        children: \"\\u4FDD\\u5B58\\u4FEE\\u6539\"\n      })]\n    }));\n\n    _defineProperty(this, \"renderExpand\", (record, index) => {\n      const columns = [{\n        key: 'title',\n        title: '标题',\n        minWidth: '10em',\n        maxWidth: '20em',\n        tooltip: v => v,\n        ellipsis: true,\n        render: (_, __, idx) => renderSubEditableCell(index, idx, 'title')\n      }, {\n        key: 'link',\n        title: '链接',\n        minWidth: '10em',\n        maxWidth: '20em',\n        tooltip: v => v,\n        ellipsis: true,\n        render: (_, __, idx) => renderSubEditableCell(index, idx, 'link')\n      }, {\n        key: 'time',\n        title: '日期',\n        ellipsis: true,\n        minWidth: '5em',\n        maxWidth: '20em',\n        render: (_, __, idx) => /*#__PURE__*/_jsx(DatePicker, {\n          defaultValue: Date.now(),\n          onChange: e => {\n            this.setState(state => {\n              var {\n                data\n              } = state;\n              data[index].posts[idx].time = e;\n              data.map(d => {\n                d.posts = d.posts.map(dd => dd);\n                return d;\n              });\n              return {\n                data\n              };\n            });\n          }\n        })\n      }, {\n        key: 'op',\n        title: '操作',\n        minWidth: '5em',\n        maxWidth: '10em',\n        render: (_, record, idx) => /*#__PURE__*/_jsx(Popover, {\n          card: true,\n          shadow: true,\n          trigger: ['click'],\n          component: /*#__PURE__*/_jsx(Card, {\n            children: /*#__PURE__*/_jsxs(Flex, {\n              children: [\"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\", /*#__PURE__*/_jsx(Button, {\n                neumorphism: true,\n                primary: true,\n                danger: true,\n                size: \"small\",\n                onClick: () => {\n                  this.setState(state => {\n                    var data = state.data;\n                    data[index].posts = data[index].posts.filter(item => item.title !== record.title);\n                    data.map(d => {\n                      d.posts = d.posts.map(dd => dd);\n                      return d;\n                    });\n                    return {\n                      data\n                    };\n                  });\n                },\n                children: \"\\u5220\\u9664\"\n              })]\n            })\n          }),\n          children: /*#__PURE__*/_jsx(Button, {\n            size: \"small\",\n            neumorphism: true,\n            danger: true,\n            prefix: /*#__PURE__*/_jsx(Delete, {}),\n            children: \"\\u5220\\u9664\"\n          })\n        })\n      }];\n\n      const renderSubEditableCell = (index, idx, key) => {\n        return /*#__PURE__*/_jsx(Input, {\n          transform: true,\n          value: this.state.data[index].posts[idx][key],\n          onChange: value => {\n            this.setState(state => {\n              var {\n                data\n              } = state;\n              data[index].posts[idx][key] = value;\n              data.map(d => {\n                d.posts = d.posts.map(dd => dd);\n                return d;\n              });\n              return {\n                data\n              };\n            });\n          }\n        });\n      };\n\n      return /*#__PURE__*/_jsxs(Flex, {\n        direction: \"TB\",\n        fullWidth: true,\n        children: [this.renderSubTableHead(index), /*#__PURE__*/_jsx(Table, {\n          columns: columns,\n          data: record.posts,\n          pagination: false,\n          showHeader: false,\n          onMove: (i, j) => {\n            this.setState(state => {\n              var data = state.data;\n              var temp = data[index].posts[i];\n              data[index].posts[i] = data[index].posts[j];\n              data[index].posts[j] = temp;\n              data.map(d => {\n                d.posts = d.posts.map(dd => dd);\n                return d;\n              });\n              return {\n                data\n              };\n            });\n          }\n        })]\n      });\n    });\n\n    this.state = {\n      loading: false,\n      data: [],\n      submitLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Card, {\n      neumorphism: true,\n      children: [/*#__PURE__*/_jsx(Context.Consumer, {\n        children: context => /*#__PURE__*/_jsx(Head, {\n          children: /*#__PURE__*/_jsx(\"title\", {\n            children: `优秀博客订阅|后台|${context.blog_name}`\n          })\n        })\n      }), /*#__PURE__*/_jsxs(Flex, {\n        direction: \"TB\",\n        fullWidth: true,\n        children: [this.renderTableHead(), /*#__PURE__*/_jsx(Table, {\n          columns: this.columns,\n          data: this.state.data,\n          loading: this.state.loading,\n          pagination: false,\n          expand: this.renderExpand,\n          onMove: (i, j) => {\n            this.setState(state => {\n              var {\n                data\n              } = state;\n              var temp = data[i];\n              data[i] = data[j];\n              data[j] = temp;\n              data.map(d => {\n                d.posts = d.posts.map(dd => dd);\n                return d;\n              });\n              return {\n                data\n              };\n            });\n          }\n        })]\n      })]\n    });\n  }\n\n}\n\n_defineProperty(AdminFriendList, \"defaultProps\", {});\n\nexport default AdminFriendList;","map":null,"metadata":{},"sourceType":"module"}