{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './card.module.scss';\nimport shadowStyles from '@/styles/shadow.module.scss';\n\nfunction Card(props, ref) {\n  const {\n    shadow = false,\n    neumorphism = false,\n    neumorphismInset = false,\n    cover,\n    className,\n    style,\n    children,\n    mainStyle\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"shadow\", \"neumorphism\", \"neumorphismInset\", \"cover\", \"className\", \"style\", \"children\", \"mainStyle\"]);\n\n  var classList = [styles.card, className];\n  if (shadow) classList.push(shadowStyles.shadow);\n  if (neumorphism) classList.push(shadowStyles.neumorphism);\n  if (neumorphismInset) classList.push(shadowStyles.neumorphism_inset);\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, restProps), {}, {\n    ref: ref,\n    className: concat(...classList),\n    style: style,\n    children: /*#__PURE__*/_jsxs(Flex, {\n      direction: \"TB\",\n      fullWidth: true,\n      children: [cover, /*#__PURE__*/_jsx(\"div\", {\n        className: styles.main,\n        style: mainStyle,\n        children: children\n      })]\n    })\n  }));\n}\n\nexport default /*#__PURE__*/React.forwardRef(Card);","map":null,"metadata":{},"sourceType":"module"}