{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Button from '@/components/button';\nimport { Plus, Close } from '@/components/svg';\nimport Input, { InputNumber, CheckBox, TextArea } from '@/components/input';\nimport { Flex } from '@/components/container';\nimport Popover from '@/components/popover';\nimport randomString from '@/utils/random';\nimport { waitUntil } from '@/utils/debounce';\nimport hash from '@/utils/hash';\nimport styles from './dynamic.module.scss';\nconst stringLength = 20;\n\nconst DragItem = props => {\n  const ref = React.useRef();\n  const [{}, drop] = useDrop({\n    accept: props.id,\n    drop: item => {\n      props.swap(item['index'], props.index);\n      return item;\n    }\n  });\n  const [{}, drag] = useDrag({\n    item: {\n      type: props.id,\n      index: props.index\n    }\n  });\n  drop(drag(ref));\n  return __jsx(\"div\", {\n    ref: ref\n  }, props.children);\n};\n\nconst Menu = callback => __jsx(\"ul\", {\n  className: styles.menus\n}, __jsx(\"li\", {\n  onClick: () => callback(randomString())\n}, \"\\u6587\\u672C\\u6846\"), __jsx(\"li\", {\n  onClick: () => callback(randomString(stringLength))\n}, \"\\u591A\\u884C\\u6587\\u672C\\u6846\"), __jsx(\"li\", {\n  onClick: () => callback(false)\n}, \"\\u591A\\u9009\\u6846\"), __jsx(\"li\", {\n  onClick: () => callback(0)\n}, \"\\u6570\\u5B57\\u6846\"), __jsx(\"li\", {\n  onClick: () => callback([])\n}, \"\\u5217\\u8868\"), __jsx(\"li\", {\n  onClick: () => callback({})\n}, \"\\u5BF9\\u8C61\"));\n\nconst InputField = props => {\n  const id = randomString();\n  return __jsx(Input, {\n    defaultValue: props.value,\n    onChange: value => {\n      waitUntil(id, () => props.callback(value), 1000);\n    },\n    style: {\n      width: '100%'\n    }\n  });\n};\n\nconst CheckField = props => {\n  const id = randomString();\n  return __jsx(CheckBox, {\n    value: props.value,\n    onChange: value => {\n      waitUntil(id, () => props.callback(value), 1000);\n    }\n  });\n};\n\nconst AreaField = props => {\n  const id = randomString();\n  return __jsx(TextArea, {\n    defaultValue: props.value,\n    onChange: value => {\n      waitUntil(id, () => props.callback(value), 1000);\n    }\n  });\n};\n\nconst NumberField = props => {\n  const id = randomString();\n  return __jsx(InputNumber, {\n    defaultValue: props.value,\n    onChange: value => {\n      waitUntil(id, () => props.callback(value), 1000);\n    }\n  });\n};\n\nconst ArrayField = props => {\n  const id = randomString();\n  return __jsx(Flex, {\n    fullWidth: true,\n    direction: \"TB\",\n    subAxis: \"flex-end\"\n  }, __jsx(Flex, {\n    fullWidth: true,\n    direction: \"TB\"\n  }, props.value.map((item, idx) => __jsx(DragItem, {\n    key: hash(item),\n    id: id,\n    index: idx,\n    swap: (i, j) => {\n      var v = props.value;\n      const temp = v[i];\n      v[i] = v[j];\n      v[j] = temp;\n      props.callback(v);\n    }\n  }, __jsx(Flex, null, __jsx(Flex.Item, {\n    style: {\n      flex: '1 1 auto'\n    }\n  }, __jsx(DynamicForm, {\n    key: hash(item),\n    value: item,\n    callback: value => {\n      var v = props.value;\n      v[idx] = value;\n      props.callback(v);\n    }\n  })), __jsx(Flex.Item, {\n    style: {\n      flex: '0 0 auto'\n    }\n  }, __jsx(Button, {\n    danger: true,\n    neumorphism: true,\n    circle: true,\n    icon: __jsx(Close, null),\n    onClick: () => {\n      var v = props.value.filter((_, i) => i !== idx);\n      props.callback(v);\n    }\n  })))))), __jsx(Flex.Item, {\n    style: {\n      width: 'unset'\n    }\n  }, __jsx(Popover, {\n    card: true,\n    shadow: true,\n    component: Menu(newValue => {\n      var v = props.value;\n      v.push(newValue);\n      props.callback(v);\n    })\n  }, __jsx(Button, {\n    neumorphism: true,\n    prefix: __jsx(Plus, null)\n  }, \"\\u65B0\\u5EFA\\u4E00\\u9879\\u5143\\u7D20\"))));\n};\n\nconst ObjectField = props => {\n  const id = randomString();\n  const slice = Object.keys(props.value).map(key => ({\n    key: key,\n    value: props.value[key]\n  }));\n  return __jsx(Flex, {\n    fullWidth: true,\n    direction: \"TB\",\n    subAxis: \"flex-end\"\n  }, __jsx(Flex, {\n    fullWidth: true,\n    direction: \"TB\"\n  }, slice.map(item => __jsx(Flex, {\n    subAxis: \"flex-start\",\n    key: hash(item)\n  }, __jsx(Flex.Item, {\n    style: {\n      flex: '0 0 30%'\n    }\n  }, __jsx(DynamicForm, {\n    value: item.key,\n    callback: value => {\n      var obj = {};\n\n      for (var key in props.value) {\n        if (key == item.key) {\n          obj[value] = props.value[key];\n        } else {\n          obj[key] = props.value[key];\n        }\n      }\n\n      props.callback(obj);\n    }\n  })), __jsx(Flex.Item, {\n    style: {\n      flex: '1 1 auto'\n    }\n  }, __jsx(DynamicForm, {\n    value: item.value,\n    callback: value => {\n      var v = props.value;\n      v[item.key] = value;\n      props.callback(v);\n    }\n  })), __jsx(Flex.Item, {\n    style: {\n      flex: '0 0 auto'\n    }\n  }, __jsx(Button, {\n    neumorphism: true,\n    danger: true,\n    circle: true,\n    icon: __jsx(Close, null),\n    onClick: () => {\n      var v = props.value;\n      delete v[item.key];\n      props.callback(v);\n    }\n  }))))), __jsx(Flex.Item, {\n    style: {\n      width: 'unset'\n    }\n  }, __jsx(Popover, {\n    card: true,\n    shadow: true,\n    component: Menu(newValue => {\n      var v = props.value;\n      v[randomString()] = newValue;\n      props.callback(v);\n    })\n  }, __jsx(Button, {\n    neumorphism: true,\n    prefix: __jsx(Plus, null)\n  }, \"\\u65B0\\u5EFA\\u4E00\\u6761\\u5C5E\\u6027\"))));\n};\n\nconst DynamicForm = props => {\n  var child = __jsx(InputField, {\n    value: props.value,\n    callback: props.callback\n  });\n\n  switch (typeof props.value) {\n    case 'string':\n      if (props.value.length > stringLength) {\n        child = __jsx(AreaField, {\n          value: props.value,\n          callback: props.callback\n        });\n      } else {\n        child = __jsx(InputField, {\n          value: props.value,\n          callback: props.callback\n        });\n      }\n\n      break;\n\n    case 'number':\n      child = __jsx(NumberField, {\n        value: props.value,\n        callback: props.callback\n      });\n      break;\n\n    case 'object':\n      if (Array.isArray(props.value)) {\n        child = __jsx(ArrayField, {\n          value: props.value,\n          callback: props.callback\n        });\n      } else {\n        child = __jsx(ObjectField, {\n          value: props.value,\n          callback: props.callback\n        });\n      }\n\n      break;\n\n    case 'boolean':\n      child = __jsx(CheckField, {\n        value: props.value,\n        callback: props.callback\n      });\n      break;\n  }\n\n  return child;\n};\n\nexport default DynamicForm;","map":null,"metadata":{},"sourceType":"module"}