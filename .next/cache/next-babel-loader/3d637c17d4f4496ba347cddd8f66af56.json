{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport Input, { CheckBox } from '@/components/input';\nimport TagSearch from '@/components/tag_search';\nimport Tag from '@/components/tag';\nimport { Search } from '@/components/svg';\nvar checkboxs = [{\n  key: 'title',\n  name: '标题'\n}, {\n  key: 'abstract',\n  name: '摘要'\n}, {\n  key: 'raw',\n  name: '内容'\n}];\n\nfunction RenderTagSearch(props) {\n  var tags = props.tags,\n      onChange = props.onChange;\n  return __jsx(TagSearch, {\n    tags: tags,\n    onAdd: function onAdd(tag) {\n      return onChange(tags.concat([tag]));\n    },\n    onDelete: function onDelete(tag) {\n      return onChange(tags.filter(function (t) {\n        return t.id !== tag.id;\n      }));\n    }\n  });\n}\n\nfunction PostSearch(props, ref) {\n  var searchWord = props.searchWord,\n      onSearchChange = props.onSearchChange,\n      checkedKeys = props.checkedKeys,\n      onCheckChange = props.onCheckChange,\n      withTags = props.withTags,\n      withoutTags = props.withoutTags,\n      onTagChange = props.onTagChange,\n      tags = props.tags,\n      restProps = _objectWithoutProperties(props, [\"searchWord\", \"onSearchChange\", \"checkedKeys\", \"onCheckChange\", \"withTags\", \"withoutTags\", \"onTagChange\", \"tags\"]);\n\n  return __jsx(Flex, _extends({}, restProps, {\n    ref: ref,\n    direction: \"TB\",\n    fullWidth: true,\n    subAxis: \"flex-start\"\n  }), __jsx(Input, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"\\u641C\\u7D22\\u6587\\u7AE0\",\n    onChange: onSearchChange,\n    prefix: __jsx(Search, null),\n    size: \"large\"\n  }), __jsx(Flex, {\n    mainAxis: \"flex-start\"\n  }, ['搜索范围'].concat(_toConsumableArray(checkboxs.map(function (item) {\n    return __jsx(CheckBox, {\n      key: item.key,\n      value: checkedKeys.indexOf(item.key) !== -1,\n      onChange: function onChange(checked) {\n        return onCheckChange(checked ? checkedKeys.concat([item.key]) : checkedKeys.filter(function (t) {\n          return t != item.key;\n        }));\n      }\n    }, item.name);\n  })))), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\",\n    subSize: \"small\"\n  }, __jsx(\"span\", null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u641C\\u7D22\\uFF1A\"), __jsx(Flex.Item, null, __jsx(RenderTagSearch, {\n    tags: withTags,\n    onChange: function onChange(tags) {\n      return onTagChange('with', tags);\n    }\n  }))), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\",\n    subSize: \"small\"\n  }, __jsx(\"span\", null, \"\\u4ECE\\u8FD9\\u4E9B\\u6807\\u7B7E\\u91CC\\u6392\\u9664\\uFF1A\"), __jsx(Flex.Item, null, __jsx(RenderTagSearch, {\n    tags: withoutTags,\n    onChange: function onChange(tags) {\n      return onTagChange('without', tags);\n    }\n  }))), !!tags && __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subSize: \"middle\"\n  }, tags.map(function (tag) {\n    return __jsx(Tag, {\n      tag: tag,\n      key: tag.id\n    });\n  })));\n}\n\nexport default /*#__PURE__*/React.forwardRef(PostSearch);","map":null,"metadata":{},"sourceType":"module"}