{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './tabs.module.scss';\n\nfunction Tabs(props) {\n  const {\n    selected,\n    defaultSelected,\n    children,\n    onChange = () => [],\n    className,\n    keepInDOM = false\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"selected\", \"defaultSelected\", \"children\", \"onChange\", \"className\", \"keepInDOM\"]);\n\n  const childList = React.Children.toArray(children).filter(child => !!child && !!child.type && child.type.displayName === TabsItem.displayName);\n  const itemProps = childList.map(item => item.props);\n  const [state, setState] = React.useState(typeof defaultSelected === 'undefined' ? itemProps.length > 0 ? itemProps[0].name : '' : defaultSelected);\n  const nowSelected = typeof selected === 'undefined' ? state : selected;\n  const nowChildren = childList.filter(item => item.props.name === nowSelected);\n  return /*#__PURE__*/_jsxs(Flex, _objectSpread(_objectSpread({}, restProps), {}, {\n    direction: \"TB\",\n    fullWidth: true,\n    className: concat(styles.tabs, className),\n    children: [/*#__PURE__*/_jsx(Flex, {\n      className: styles.nav,\n      wrap: false,\n      mainAxis: \"flex-start\",\n      children: itemProps.map(item => /*#__PURE__*/_jsx(Flex.Item, {\n        className: concat(styles.nav_item, nowSelected === item.name ? styles.selected : '', !!item.disabled ? styles.disabled : ''),\n        onClick: () => {\n          setState(item.name);\n          onChange(item.name);\n        },\n        children: item.name\n      }, item.name))\n    }), keepInDOM ? childList.map(item => /*#__PURE__*/_jsx(\"div\", {\n      style: item.props.name === nowSelected ? {} : {\n        display: 'none'\n      },\n      children: item\n    }, item.key)) : nowChildren.length > 0 ? nowChildren[0] : null]\n  }));\n}\n\nexport function TabsItem(props) {\n  const {\n    name,\n    disabled,\n    id,\n    children,\n    className,\n    style\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: concat(className),\n    style: style,\n    children: children\n  });\n}\nTabsItem.displayName = 'TabsItem';\nexport default Object.assign(Tabs, {\n  Item: TabsItem\n});","map":null,"metadata":{},"sourceType":"module"}