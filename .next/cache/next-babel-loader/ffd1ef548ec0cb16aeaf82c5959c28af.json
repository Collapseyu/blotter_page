{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport shadowStyles from '@/styles/shadow.less';\nimport styles from './textarea.less';\nexport default function TextArea(props) {\n  var defaultValue = props.defaultValue,\n      value = props.value,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'middle' : _props$size,\n      _props$label = props.label,\n      label = _props$label === void 0 ? '' : _props$label,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$lablePlacement = props.lablePlacement,\n      lablePlacement = _props$lablePlacement === void 0 ? 'left' : _props$lablePlacement,\n      rows = props.rows,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$onChange = props.onChange,\n      _onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      _props$getValueCallba = props.getValueCallback,\n      getValueCallback = _props$getValueCallba === void 0 ? function () {} : _props$getValueCallba,\n      _props$setValueCallba = props.setValueCallback,\n      setValueCallback = _props$setValueCallba === void 0 ? function () {} : _props$setValueCallba,\n      onBlur = props.onBlur,\n      hint = props.hint,\n      style = props.style,\n      className = props.className;\n\n  var ref = React.useRef();\n  React.useEffect(function () {\n    return getValueCallback(function () {\n      return ref.current.value;\n    });\n  }, [ref, getValueCallback]);\n  React.useEffect(function () {\n    return setValueCallback(function (value) {\n      return ref.current.value = value;\n    });\n  }, [ref, setValueCallback]);\n  return __jsx(\"div\", {\n    className: concat(styles.wrapper, className, styles[size]),\n    style: style,\n    onBlur: onBlur\n  }, !!label ? __jsx(\"div\", {\n    className: styles.label\n  }, label) : null, __jsx(\"div\", {\n    className: concat.apply(void 0, [styles.inner].concat(_toConsumableArray(disabled ? ['disabled'] : [])))\n  }, __jsx(\"div\", {\n    className: concat(styles.textarea, shadowStyles.neumorphism_inset)\n  }, __jsx(\"textarea\", {\n    ref: ref,\n    defaultValue: !!value ? undefined : defaultValue,\n    value: value,\n    onChange: function onChange(e) {\n      return _onChange(e.target.value);\n    },\n    placeholder: placeholder,\n    readOnly: !editable,\n    autoFocus: autoFocus,\n    rows: rows\n  })), !!hint ? __jsx(\"div\", {\n    className: styles.hint\n  }, hint) : null));\n}","map":null,"metadata":{},"sourceType":"module"}