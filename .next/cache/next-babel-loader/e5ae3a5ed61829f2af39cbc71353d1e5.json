{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './card.less';\nimport shadowStyles from '@/styles/shadow.less';\n\nfunction Card(props, ref) {\n  var _props$shadow = props.shadow,\n      shadow = _props$shadow === void 0 ? false : _props$shadow,\n      _props$neumorphism = props.neumorphism,\n      neumorphism = _props$neumorphism === void 0 ? false : _props$neumorphism,\n      _props$neumorphismIns = props.neumorphismInset,\n      neumorphismInset = _props$neumorphismIns === void 0 ? false : _props$neumorphismIns,\n      cover = props.cover,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"shadow\", \"neumorphism\", \"neumorphismInset\", \"cover\", \"className\", \"style\", \"children\"]);\n\n  var classList = [styles.card, className];\n  if (shadow) classList.push(shadowStyles.shadow);\n  if (neumorphism) classList.push(shadowStyles.neumorphism);\n  if (neumorphismInset) classList.push(shadowStyles.neumorphism_inset);\n  return __jsx(\"div\", _extends({}, restProps, {\n    ref: ref,\n    className: concat.apply(void 0, classList),\n    style: style\n  }), __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true\n  }, cover, __jsx(\"div\", {\n    className: styles.main\n  }, children)));\n}\n\nexport default React.forwardRef(Card);","map":null,"metadata":{},"sourceType":"module"}