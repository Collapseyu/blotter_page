{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Card from '@/components/card';\nimport Table from '@/components/table';\nimport Button, { A } from '@/components/button';\nimport Popover from '@/components/popover';\nimport TagPart from '@/components/tag';\nimport PostSearch from '@/components/post_search';\nimport { Eye, EyeInvisible, Edit, Delete, Plus } from '@/components/svg';\nimport { Flex } from '@/components/container';\nimport { adminPosts, postDelete } from '@/utils/api';\nimport { Context } from '@/utils/global';\nimport ShowNotification from '@/utils/notification';\nimport { waitUntil } from '@/utils/debounce';\nimport { formatSecond } from '@/utils/time';\nconst defaultSort = 'publish_time';\nconst defaultUp = false;\n\nclass AdminPostList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async () => {\n      this.setState({\n        loading: true\n      });\n      var r = await adminPosts(this.state.search, this.state.search_fields, this.state.page, this.state.size, this.state.field, this.state.up, this.state.with_tags, this.state.without_tags);\n      this.setState({\n        total: r.total,\n        data: r.posts,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"columns\", [{\n      title: '标题',\n      key: 'title',\n      minWidth: '5em',\n      maxWidth: '15em',\n      tooltip: text => text,\n      ellipsis: true,\n      render: (text, record, index) => /*#__PURE__*/_jsx(Link, {\n        href: '/post/[url]',\n        as: `/post/${record.url}`,\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: record.title\n        })\n      })\n    }, {\n      title: '链接',\n      key: 'url',\n      tooltip: true,\n      minWidth: '5em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '发布时间',\n      key: 'publish_time',\n      tooltip: text => formatSecond(text),\n      sorter: true,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true,\n      render: text => formatSecond(text)\n    }, {\n      title: '编辑时间',\n      key: 'edit_time',\n      tooltip: text => formatSecond(text),\n      sorter: true,\n      minWidth: '10em',\n      maxWidth: '15em',\n      ellipsis: true,\n      render: text => formatSecond(text)\n    }, {\n      title: '阅读量',\n      key: 'view',\n      tooltip: true,\n      sorter: true,\n      minWidth: '6em',\n      maxWidth: '15em',\n      ellipsis: true\n    }, {\n      title: '已发布',\n      key: 'published',\n      sorter: true,\n      minWidth: '6em',\n      maxWidth: '15em',\n      render: (text, record, index) => text ? /*#__PURE__*/_jsx(Eye, {\n        style: {\n          color: 'green'\n        }\n      }) : /*#__PURE__*/_jsx(EyeInvisible, {\n        style: {\n          color: 'red'\n        }\n      })\n    }, {\n      title: '标签',\n      key: 'tags',\n      minWidth: '10em',\n      maxWidth: '20em',\n      render: (text, record, index) => /*#__PURE__*/_jsx(Flex, {\n        mainSize: \"small\",\n        subSize: \"small\",\n        mainAxis: \"flex-start\",\n        children: record.tags.map(tag => /*#__PURE__*/_jsx(TagPart, {\n          tag: tag\n        }, tag.short))\n      })\n    }, {\n      title: '操作',\n      key: 'op',\n      minWidth: '12em',\n      maxWidth: '15em',\n      render: (text, record, index) => /*#__PURE__*/_jsxs(Flex, {\n        mainAxis: \"space-around\",\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: `/admin/post?url=${record.url}`,\n          passHref: true,\n          children: /*#__PURE__*/_jsx(A, {\n            size: \"small\",\n            neumorphism: true,\n            prefix: /*#__PURE__*/_jsx(Edit, {}),\n            children: \"\\u7F16\\u8F91\"\n          })\n        }), /*#__PURE__*/_jsx(Popover, {\n          shadow: true,\n          card: true,\n          trigger: ['click'],\n          component: /*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              children: \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\"\n            }), /*#__PURE__*/_jsx(Button, {\n              onClick: () => {\n                this.onDelete(record.id);\n              },\n              danger: true,\n              neumorphism: true,\n              primary: true,\n              size: \"small\",\n              children: \"\\u5220\\u9664\\uFF01\"\n            })]\n          }),\n          children: /*#__PURE__*/_jsx(Button, {\n            size: \"small\",\n            danger: true,\n            neumorphism: true,\n            prefix: /*#__PURE__*/_jsx(Delete, {}),\n            children: \"\\u5220\\u9664\"\n          })\n        })]\n      })\n    }]);\n\n    _defineProperty(this, \"onDelete\", async id => {\n      var r = await postDelete(id);\n      ShowNotification(r);\n      this.setState(state => ({\n        data: state.data.filter(post => post.id != id)\n      }));\n    });\n\n    this.state = {\n      search: '',\n      search_fields: ['title'],\n      loading: false,\n      data: [],\n      total: 0,\n      size: 10,\n      page: 1,\n      with_tags: [],\n      without_tags: [],\n      field: defaultSort,\n      up: defaultUp\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Card, {\n      neumorphism: true,\n      children: [/*#__PURE__*/_jsx(Context.Consumer, {\n        children: context => /*#__PURE__*/_jsx(Head, {\n          children: /*#__PURE__*/_jsx(\"title\", {\n            children: `文章列表|后台|${context.blog_name}`\n          })\n        })\n      }), /*#__PURE__*/_jsx(PostSearch, {\n        searchWord: this.state.search,\n        onSearchChange: value => waitUntil('index_search', () => this.setState({\n          search: value,\n          page: 1,\n          size: 10\n        }, this.getData), 1000),\n        checkedKeys: this.state.search_fields,\n        onCheckChange: search_fields => this.setState({\n          search_fields\n        }, this.getData),\n        withTags: this.state.with_tags,\n        withoutTags: this.state.without_tags,\n        onTagChange: (type, tags) => this.setState(state => _objectSpread(_objectSpread({}, state), {\n          [type === 'with' ? 'with_tags' : 'without_tags']: tags\n        }), this.getData)\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/admin/post\",\n          passHref: true,\n          children: /*#__PURE__*/_jsx(A, {\n            primary: true,\n            neumorphism: true,\n            prefix: /*#__PURE__*/_jsx(Plus, {}),\n            children: \"\\u65B0\\u5EFA\\u6587\\u7AE0\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Table, {\n        columns: this.columns,\n        data: this.state.data,\n        loading: this.state.loading,\n        onChange: (page, size, field, up) => this.setState({\n          page,\n          size,\n          field,\n          up\n        }, this.getData),\n        pagination: {\n          page: this.state.page,\n          total: this.state.total,\n          size: this.state.size,\n          sizeSelect: [5, 10, 20, 50, 100]\n        }\n      })]\n    });\n  }\n\n}\n\n_defineProperty(AdminPostList, \"defaultProps\", {});\n\nexport default AdminPostList;","map":null,"metadata":{},"sourceType":"module"}