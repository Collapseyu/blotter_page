{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { Flex } from '@/components/container';\nimport Button from '@/components/button';\nimport Card from '@/components/card';\nimport Input from '@/components/input';\nimport Avatar from '@/components/avatar';\nimport If from '@/components/if';\nimport { Context } from '@/utils/global';\nimport { info, userSet, avatar } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"getData\", async () => {\n      const user = await info(this.props.router.query.username);\n      this.setState({\n        user\n      });\n    });\n\n    _defineProperty(this, \"update\", async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        username,\n        email,\n        ns_id,\n        ns_name,\n        ac_name,\n        ac_island,\n        qq,\n        avatar\n      } = this.state.user;\n      const r = await userSet(username, email, avatar, ns_id, ns_name, ac_name, ac_island, qq, this.state.password);\n\n      if (ShowNotification(r)) {\n        this.props.router.push('/user/[username]', `/user/${username}`);\n        this.context.callback({\n          user: this.state.user\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    this.state = {\n      user: this.props.user,\n      loading: false,\n      loadingAvatar: false,\n      password: ''\n    };\n  }\n\n  static async getInitialProps(args) {\n    const user = await info(args.query.username);\n    return {\n      user\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const allFields = [{\n      key: 'avatar',\n      name: '头像',\n      self: true,\n      rewrite: url => url.replace('http://', 'https://')\n    }, {\n      key: 'username',\n      name: '用户名',\n      self: false\n    }, {\n      key: 'email',\n      name: '邮箱',\n      self: false\n    }, {\n      key: 'qq',\n      name: 'QQ 号',\n      self: true\n    }, {\n      key: 'ns_id',\n      name: 'NS ID',\n      self: false,\n      prefix: 'SW',\n      rewrite: value => value.replace(/[^0-9\\-]/g, '')\n    }, {\n      key: 'ns_name',\n      name: 'NS 名称',\n      self: false\n    }, {\n      key: 'ac_name',\n      name: '动森名称',\n      self: false\n    }, {\n      key: 'ac_island',\n      name: '动森岛名',\n      self: false,\n      suffix: '岛',\n      rewrite: value => {\n        if (value.length > 0 && value[value.length - 1] == '岛') {\n          value = value.slice(0, value.length - 1);\n        }\n\n        return value;\n      }\n    }];\n    const fields = this.state.user.self ? allFields : allFields.filter(item => !item.self);\n    return __jsx(Card, {\n      neumorphism: true\n    }, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `${this.props.router.query.username}|用户页|${context.blog_name}`))), __jsx(Flex, {\n      direction: \"TB\",\n      fullWidth: true\n    }, __jsx(Avatar, {\n      style: {\n        fontSize: 128,\n        margin: 'auto'\n      },\n      src: this.state.user.avatar\n    }), __jsx(If, {\n      condition: this.state.user.self\n    }, __jsx(Flex, null, __jsx(Button, {\n      neumorphism: true,\n      loading: this.state.loadingAvatar,\n      onClick: async () => {\n        this.setState({\n          loadingAvatar: true\n        });\n        const r = await avatar(this.state.user.email);\n        this.setState(state => {\n          var {\n            user\n          } = state;\n          user.avatar = r.avatar;\n          return {\n            user,\n            loadingAvatar: false\n          };\n        });\n      }\n    }, \"\\u6839\\u636E\\u90AE\\u7BB1\\u66F4\\u65B0 Github\\u3001Gavatar \\u5934\\u50CF\"), __jsx(\"a\", {\n      href: \"/api/user/qq_avatar\",\n      target: \"_blank\"\n    }, __jsx(Button, {\n      neumorphism: true,\n      disabled: !this.state.user.qq_connected\n    }, \"\\u66F4\\u65B0 QQ \\u5934\\u50CF\")), __jsx(Button, {\n      neumorphism: true,\n      onClick: () => this.getData()\n    }, \"\\u5237\\u65B0\\u6570\\u636E\"))), __jsx(Flex, {\n      direction: \"TB\",\n      fullWidth: true\n    }, fields.map(item => this.state.user.self ? __jsx(Input, {\n      key: item.key,\n      label: item.name,\n      prefix: item.prefix,\n      suffix: item.suffix,\n      value: this.state.user[item.key],\n      onChange: value => {\n        if (!!item.rewrite) value = item.rewrite(value);\n        this.setState(state => {\n          var {\n            user\n          } = state;\n          user[item.key] = value;\n          return {\n            user\n          };\n        });\n      }\n    }) : __jsx(\"p\", null, item.prefix, \" \", this.state.user[item.key], \" \", item.suffix))), __jsx(If, {\n      condition: this.state.user.self\n    }, __jsx(Flex, null, __jsx(Input, {\n      type: \"password\",\n      placeholder: \"\\u5982\\u679C\\u4E0D\\u9700\\u8981\\u4FEE\\u6539\\u5BC6\\u7801\\u8BF7\\u7559\\u7A7A\",\n      value: this.state.password,\n      onChange: value => this.setState({\n        password: value\n      })\n    }), !this.state.user.qq_connected ? __jsx(\"a\", {\n      href: \"/api/user/jump_to_qq?state=connect\",\n      target: \"_blank\"\n    }, __jsx(Button, {\n      neumorphism: true\n    }, \"\\u7ED1\\u5B9A QQ \\u767B\\u5F55\")) : __jsx(Button, {\n      neumorphism: true,\n      disabled: true\n    }, \"\\u5DF2\\u7ED1\\u5B9A QQ \\u767B\\u5F55\"), !this.state.user.github_connected ? __jsx(\"a\", {\n      href: \"/api/user/jump_to_github?state=connect\",\n      target: \"_blank\"\n    }, __jsx(Button, {\n      neumorphism: true\n    }, \"\\u7ED1\\u5B9A Github \\u767B\\u5F55\")) : __jsx(Button, {\n      neumorphism: true,\n      disabled: true\n    }, \"\\u5DF2\\u7ED1\\u5B9A Github \\u767B\\u5F55\"), __jsx(Button, {\n      neumorphism: true,\n      loading: this.state.loading,\n      primary: true,\n      onClick: this.update\n    }, \"\\u66F4\\u65B0\\u4FE1\\u606F\")))));\n  }\n\n}\n\n_defineProperty(User, \"defaultProps\", {});\n\n_defineProperty(User, \"contextType\", Context);\n\nexport default withRouter(User);","map":null,"metadata":{},"sourceType":"module"}