{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@/components/card';\nimport Input, { CheckBox } from '@/components/input';\nimport Button from '@/components/button';\nimport { QQ, Tag } from '@/components/svg';\nimport Pagination from '@/components/pagination';\nexport default function () {\n  const [text, setText] = React.useState('');\n  const [text2, setText2] = React.useState('');\n  const [page, setPage] = React.useState(50);\n  const [size, setSize] = React.useState(10);\n  const [check, setCheck] = React.useState(false);\n\n  var getText = () => '';\n\n  return __jsx(Card, {\n    neumorphism: true\n  }, __jsx(Input, {\n    defaultValue: \"666\",\n    value: text,\n    label: \"\\u59D3\\u540D\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n    editable: false,\n    disabled: true,\n    onChange: v => setText(v),\n    getValueCallback: cb => getText = cb,\n    prefix: __jsx(QQ, null),\n    suffix: __jsx(Tag, null),\n    selectTrigger: ['click'],\n    onSelect: (k, v) => setText(`${k}-${v}`),\n    options: [{\n      key: '1',\n      value: 'a'\n    }, {\n      key: '2',\n      value: 'b'\n    }]\n  }), __jsx(\"p\", null, text), __jsx(Button, {\n    onClick: () => {\n      setText2(getText());\n    }\n  }, \"\\u5237\\u65B0\"), __jsx(\"p\", null, text2), __jsx(Input, {\n    defaultValue: \"666\",\n    value: text,\n    label: \"\\u59D3\\u540D\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n    onChange: v => setText(v),\n    getValueCallback: cb => getText = cb,\n    prefix: __jsx(QQ, null),\n    suffix: __jsx(Tag, null),\n    selectTrigger: ['click'],\n    onSelect: (k, v) => setText(`${k}-${v}`),\n    options: [{\n      key: '1',\n      value: 'a'\n    }, {\n      key: '2',\n      value: 'b'\n    }]\n  }), __jsx(Input, {\n    defaultValue: \"666\",\n    value: text,\n    label: \"\\u59D3\\u540D\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u59D3\\u540D\",\n    editable: false,\n    onChange: v => setText(v),\n    getValueCallback: cb => getText = cb,\n    prefix: __jsx(QQ, null),\n    suffix: __jsx(Tag, null),\n    selectTrigger: ['click'],\n    onSelect: (k, v) => setText(`${k}-${v}`),\n    options: [{\n      key: '1',\n      value: 'a'\n    }, {\n      key: '2',\n      value: 'b'\n    }]\n  }), __jsx(Pagination, {\n    page: page,\n    size: size,\n    total: 500,\n    sizeSelect: [10, 20],\n    onChange: (_page, _size) => {\n      if (size != _size) {\n        setPage(Math.floor((page - 1) * size / _size + 1));\n        setSize(_size);\n      } else {\n        setPage(_page);\n      }\n    }\n  }), __jsx(CheckBox, {\n    value: check,\n    onChange: v => setCheck(v)\n  }, \"\\u9009\\u4E2D\"), __jsx(CheckBox, {\n    switchStyle: true,\n    checkText: \"\\u662F\",\n    uncheckText: \"\\u5426\",\n    value: check,\n    onChange: v => setCheck(v)\n  }, \"\\u9009\\u4E2D\"));\n}","map":null,"metadata":{},"sourceType":"module"}