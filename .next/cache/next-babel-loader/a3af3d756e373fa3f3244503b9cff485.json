{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; // import { Avatar, Tag } from 'antd';\n\nimport Link from 'next/link';\nimport Avatar from '@/components/avatar';\nimport { concat } from '@/utils/component';\nimport { Flex } from '@/components/container';\nimport { isLight } from '@/utils/color';\nimport styles from './tag.less';\nimport textStyles from '@/styles/text.less';\nimport shadowStyles from '@/styles/shadow.less';\nexport default function Tag(props) {\n  var tag = props.tag,\n      onClose = props.onClose,\n      className = props.className,\n      style = props.style;\n  return __jsx(Link, {\n    href: '/tag/[tag]',\n    as: \"/tag/\".concat(tag[\"short\"])\n  }, __jsx(\"a\", null, __jsx(Flex, {\n    className: concat(styles.tag, className, textStyles.color, shadowStyles.neumorphism_light, shadowStyles.clickable),\n    mainAxis: \"space-around\",\n    mainSize: \"small\",\n    style: _objectSpread(_objectSpread({}, !!tag.color ? {\n      background: tag.color,\n      color: isLight(tag.color) ? 'var(--color-dark)' : 'var(--color-white)'\n    } : {}), style)\n  }, tag.icon ? __jsx(Avatar, {\n    src: tag.icon,\n    style: {\n      fontSize: '0.75em',\n      background: 'white'\n    }\n  }) : null, tag.name, !!onClose ? 'x' : null)));\n} // class TagPart extends React.Component<TagProps, {}> {\n//   static defaultProps: TagProps = {\n//     closable: false,\n//     onClose: () => {},\n//   };\n//   constructor(props: TagProps) {\n//     super(props);\n//   }\n//   render() {\n//     return typeof this.props.tag === 'undefined' ? null : (\n//       <Tag\n//         className={styles.tag}\n//         color={this.props.tag.color}\n//         closable={this.props.closable}\n//         onClose={() => {\n//           this.props.onClose!(this.props.tag!);\n//         }}\n//       >\n//         <Link href={'/tag/[tag]'} as={`/tag/${this.props.tag.short}`}>\n//           <a>\n//             {this.props.tag.icon ? (\n//               <Avatar size={15} shape=\"circle\" src={this.props.tag.icon} />\n//             ) : null}\n//             {this.props.tag.name}\n//           </a>\n//         </Link>\n//       </Tag>\n//     );\n//   }\n// }\n// export default TagPart;","map":null,"metadata":{},"sourceType":"module"}