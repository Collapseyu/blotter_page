{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Loading } from '@/components/svg';\nimport { concat } from '@/utils/component';\nimport styles from './button.less';\nimport shadowStyles from '@/styles/shadow.less';\n\nfunction parseProps(props) {\n  var _props$size = props.size,\n      size = _props$size === void 0 ? 'middle' : _props$size,\n      icon = props.icon,\n      prefix = props.prefix,\n      suffix = props.suffix,\n      _props$circle = props.circle,\n      circle = _props$circle === void 0 ? false : _props$circle,\n      _props$primary = props.primary,\n      primary = _props$primary === void 0 ? false : _props$primary,\n      _props$shadow = props.shadow,\n      shadow = _props$shadow === void 0 ? false : _props$shadow,\n      _props$neumorphism = props.neumorphism,\n      neumorphism = _props$neumorphism === void 0 ? false : _props$neumorphism,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$clicked = props.clicked,\n      clicked = _props$clicked === void 0 ? false : _props$clicked,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      onClick = props.onClick,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      className = props.className,\n      children = props.children;\n  var classList = [styles.button, className];\n\n  if (typeof size === 'string') {\n    classList.push(styles[size]);\n  } else {\n    style.fontSize = \"\".concat(size, \"em\");\n    style.width = \"\".concat(size + 1, \"em\");\n    style.height = \"\".concat(size + 1, \"em\");\n  }\n\n  if (!!icon) classList.push(styles.icon);\n  if (circle) classList.push(styles.circle);\n  if (primary) classList.push(styles.primary);\n  if (shadow) classList.push(shadowStyles.shadow);\n  if (neumorphism && !clicked) classList.push(shadowStyles.neumorphism);\n  if (neumorphism && clicked) classList.push(shadowStyles.neumorphism_inset);\n  if (loading || disabled) classList.push('disabled');\n  if ((shadow || neumorphism) && !disabled) classList.push(shadowStyles.clickable);\n  return {\n    classList: classList,\n    style: style,\n    onClick: disabled ? function () {} : onClick,\n    icon: loading && !!icon ? __jsx(Loading, null) : icon,\n    prefix: prefix,\n    suffix: loading && !icon ? __jsx(Loading, null) : suffix,\n    children: children,\n    disabled: loading || disabled\n  };\n}\n\nfunction Button(props, ref) {\n  var _parseProps = parseProps(props),\n      classList = _parseProps.classList,\n      style = _parseProps.style,\n      onClick = _parseProps.onClick,\n      icon = _parseProps.icon,\n      children = _parseProps.children,\n      disabled = _parseProps.disabled,\n      prefix = _parseProps.prefix,\n      suffix = _parseProps.suffix;\n\n  return __jsx(\"button\", {\n    className: concat.apply(void 0, _toConsumableArray(classList)),\n    style: style,\n    onClick: onClick,\n    disabled: disabled\n  }, !!prefix ? __jsx(\"span\", {\n    className: styles.prefix\n  }, prefix) : null, !!icon ? icon : children, !!suffix ? __jsx(\"span\", {\n    className: styles.suffix\n  }, suffix) : null);\n}\n\nfunction ALink(props, ref) {\n  var _parseProps2 = parseProps(props),\n      classList = _parseProps2.classList,\n      style = _parseProps2.style,\n      onClick = _parseProps2.onClick,\n      icon = _parseProps2.icon,\n      children = _parseProps2.children,\n      disabled = _parseProps2.disabled,\n      prefix = _parseProps2.prefix,\n      suffix = _parseProps2.suffix;\n\n  var href = props.href,\n      target = props.target,\n      rel = props.rel,\n      linkType = props.linkType;\n  return __jsx(\"a\", {\n    ref: ref,\n    className: concat.apply(void 0, _toConsumableArray(classList)),\n    style: _objectSpread(_objectSpread({}, style), disabled ? {\n      pointerEvents: 'none',\n      opacity: 0.5\n    } : {}),\n    onClick: onClick,\n    href: href,\n    target: target,\n    rel: rel,\n    type: linkType\n  }, !!prefix ? __jsx(\"span\", {\n    className: styles.prefix\n  }, prefix) : null, !!icon ? icon : children, !!suffix ? __jsx(\"span\", {\n    className: styles.suffix\n  }, suffix) : null);\n} // Next.js 的 Link  组件需要子组件可以接收 ref（用于修i该子元素的 href）\n\n\nexport default React.forwardRef(Button);\nexport var A = React.forwardRef(ALink);","map":null,"metadata":{},"sourceType":"module"}