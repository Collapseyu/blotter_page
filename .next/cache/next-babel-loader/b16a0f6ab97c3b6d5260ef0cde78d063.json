{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Triangle, Filter } from '@/components/svg';\nimport Button from '@/components/button';\nimport { CheckBox } from '@/components/input';\nimport { Modal } from '@/components/popover';\nimport { Flex } from '@/components/container';\nimport { Left } from '@/components/svg';\nimport { concat } from '@/utils/component';\nimport styles from './table.less';\nimport Pagination from '../pagination';\nimport Loading from '../loading';\nexport default function Table(props) {\n  const {\n    columns,\n    data,\n    style,\n    showHeader = true,\n    defaultOrder = {\n      sortKey: '',\n      ascending: false\n    },\n    pagination = false,\n    loading = false,\n    expand\n  } = props;\n  if (!!loading) return loading === true ? __jsx(Loading, null) : loading; // 将简写的列拓展为标准的 Column 类型\n\n  const cols = React.useMemo(() => columns.map(col => typeof col === 'string' ? {\n    key: col\n  } : col), [columns]); // 初始化过滤器部分\n  // 每个列的过滤器\n\n  const [filters, setFilters] = React.useState({}); // 过滤值\n\n  const [filtersValues, setFiltersValues] = React.useState({}); // 过滤器弹出框\n\n  const [filterModal, setFilterModal] = React.useState(false); // 列表内容操作\n\n  var showData = data.concat([]); // 过滤\n\n  Object.keys(filters).map(key => showData = showData.filter((item, idx) => filters[key](filtersValues[key], item, idx))); // 排序\n\n  const [sortKey, setSortKey] = React.useState(defaultOrder.sortKey);\n  const [ascending, setAscending] = React.useState(defaultOrder.ascending);\n  const sortCols = cols.filter(col => col.key === sortKey);\n  const sorter = sortCols.length > 0 ? sortCols[0].sorter : undefined;\n\n  if (sorter) {\n    showData.sort(sorter);\n    if (!ascending) showData.reverse();\n  } // 分页\n\n\n  const [pageCurrent, setPageCurrent] = React.useState(typeof pagination !== 'boolean' ? pagination.page : 1);\n  const [pageSize, setPageSize] = React.useState(typeof pagination !== 'boolean' ? pagination.size : 10);\n  const paginationProps = React.useMemo(() => _objectSpread(_objectSpread({}, {\n    page: pageCurrent,\n    size: pageSize,\n    total: showData.length,\n    onChange: (page, size) => {\n      setPageCurrent(page);\n      setPageSize(size);\n    }\n  }), typeof pagination !== 'boolean' ? pagination : {}), [pagination, pageCurrent, pageSize, showData]);\n\n  if (pagination !== false) {\n    showData = showData.slice((paginationProps.page - 1) * paginationProps.size, paginationProps.page * paginationProps.size);\n  } // 表格扩展\n\n\n  const reducer = (state, action) => {\n    console.log(state, action);\n    if (action === 'init') return {};\n    return _objectSpread(_objectSpread({}, state), {}, {\n      [action]: !state[action]\n    });\n  };\n\n  const [expanded, setExpanded] = React.useReducer(reducer, {});\n\n  const resetTable = () => {\n    paginationProps.onChange(1, paginationProps.size);\n    setExpanded('init');\n  };\n\n  return __jsx(\"div\", {\n    className: styles.table,\n    style: style\n  }, __jsx(\"table\", null, showHeader ? __jsx(\"thead\", {\n    style: {\n      visibility: showHeader ? 'visible' : 'hidden'\n    }\n  }, __jsx(\"tr\", null, !!expand ? __jsx(\"td\", null) : null, cols.map(col => __jsx(\"th\", {\n    key: col.key,\n    style: col.headStyle\n  }, __jsx(\"div\", {\n    className: styles.title\n  }, !col.title ? col.key : typeof col.title === 'function' ? col.title(col.key) : col.title, !!col.sorter ? __jsx(\"span\", {\n    className: styles.sorter\n  }, __jsx(Button, {\n    className: styles.sorter_icon,\n    icon: __jsx(Triangle, null),\n    size: \"small\",\n    style: {\n      color: sortKey === col.key && ascending ? 'var(--primary)' : 'unset'\n    },\n    onClick: () => {\n      setSortKey(sortKey === col.key && ascending ? '' : col.key);\n      setAscending(true);\n      resetTable();\n    }\n  }), __jsx(Button, {\n    className: styles.sorter_icon,\n    icon: __jsx(Triangle, {\n      style: {\n        transform: 'rotate(180deg)'\n      }\n    }),\n    size: \"small\",\n    style: {\n      color: sortKey === col.key && !ascending ? 'var(--primary)' : 'unset'\n    },\n    onClick: () => {\n      setSortKey(sortKey === col.key && !ascending ? '' : col.key);\n      setAscending(false);\n      resetTable();\n    }\n  })) : null, !!col.filter ? __jsx(\"span\", {\n    className: styles.filter\n  }, __jsx(Button, {\n    className: styles.sorter_icon,\n    icon: __jsx(Filter, null),\n    size: \"small\",\n    style: {\n      color: !!filters[col.key] ? 'var(--primary)' : 'unset'\n    },\n    onClick: () => {\n      setFilterModal(col);\n    }\n  })) : null))))) : null, __jsx(\"tbody\", null, showData.map((item, idx) => [__jsx(\"tr\", {\n    key: idx\n  }, !!expand ? __jsx(\"td\", {\n    onClick: () => setExpanded(idx)\n  }, __jsx(Left, {\n    className: concat(styles.prefix, !expanded[idx] ? styles.close : '')\n  })) : null, cols.map(col => __jsx(\"td\", {\n    key: col.key,\n    style: _objectSpread(_objectSpread({}, idx === 0 ? {\n      width: col.width,\n      minWidth: col.minWidth,\n      maxWidth: col.maxWidth\n    } : {}), col.style)\n  }, !!col.render ? col.render(item[col.key], item, idx, data) : item[col.key]))), !!expand && !!expanded[idx] ? __jsx(\"tr\", {\n    key: `${idx}-expand`\n  }, __jsx(\"td\", null), __jsx(\"td\", {\n    colspan: cols.length\n  }, expand(item, idx))) : null])), cols.filter(col => !!col.footer).length > 0 ? __jsx(\"tfoot\", null, __jsx(\"tr\", null, !!expand ? __jsx(\"td\", null) : null, cols.map(col => __jsx(\"td\", {\n    key: col.key,\n    style: col.footStyle\n  }, !col.footer ? null : typeof col.footer === 'function' ? col.footer(col.key) : col.footer)))) : null), pagination !== false ? __jsx(Pagination, _extends({}, paginationProps, {\n    style: _objectSpread({\n      margin: 5\n    }, paginationProps.style),\n    onChange: (page, size) => {\n      setExpanded('init');\n      paginationProps.onChange(page, size);\n    }\n  })) : null, __jsx(Modal, {\n    show: filterModal !== false,\n    onClose: () => setFilterModal(false)\n  }, filterModal === false ? null : __jsx(\"div\", null, __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subAxis: \"center\",\n    subSize: \"middle\"\n  }, filterModal.filter.filters.map(item => __jsx(CheckBox, {\n    key: item,\n    value: !!filtersValues[filterModal.key] && filtersValues[filterModal.key].indexOf(item) !== -1,\n    onChange: checked => {\n      var array = filtersValues[filterModal.key];\n      if (!array) array = [];\n\n      if (checked) {\n        array.push(item);\n      } else {\n        array = array.filter(i => i !== item);\n      }\n\n      setFiltersValues(_objectSpread(_objectSpread({}, filtersValues), {}, {\n        [filterModal.key]: array\n      }));\n    }\n  }, item))), __jsx(Flex, {\n    mainAxis: \"flex-end\",\n    subAxis: \"center\",\n    subSize: \"middle\"\n  }, __jsx(Button, {\n    onClick: () => {\n      delete filters[filterModal.key];\n      setFilters(filters);\n      setFilterModal(false);\n      resetTable();\n    }\n  }, \"\\u53D6\\u6D88\\u7B5B\\u9009\"), __jsx(Button, {\n    onClick: () => {\n      filters[filterModal.key] = filterModal.filter.onFilter;\n      setFilters(filters);\n      setFilterModal(false);\n      resetTable();\n    }\n  }, \"\\u4F7F\\u7528\\u7B5B\\u9009\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}