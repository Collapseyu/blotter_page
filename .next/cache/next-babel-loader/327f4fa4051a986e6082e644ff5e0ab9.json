{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Left } from '@/components/svg';\nimport Image from '@/components/image';\nimport { Flex } from '@/components/container';\nimport { concat } from '@/utils/component';\nimport styles from './carousel.module.scss';\nexport default function Carousel(props) {\n  var images = props.images,\n      _props$height = props.height,\n      height = _props$height === void 0 ? '100%' : _props$height,\n      _props$width = props.width,\n      width = _props$width === void 0 ? '100%' : _props$width,\n      maxHeight = props.maxHeight,\n      background = props.background,\n      style = props.style,\n      _props$autoplay = props.autoplay,\n      autoplay = _props$autoplay === void 0 ? 0 : _props$autoplay,\n      restProps = _objectWithoutProperties(props, [\"images\", \"height\", \"width\", \"maxHeight\", \"background\", \"style\", \"autoplay\"]);\n\n  var length = React.useMemo(function () {\n    return images.length;\n  }, [images]);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      now = _React$useState2[0],\n      setNow = _React$useState2[1];\n\n  var pre = React.useCallback(function () {\n    return setNow((now - 1 + length) % length);\n  }, [length, now, setNow]);\n  var next = React.useCallback(function () {\n    return setNow((now + 1 + length) % length);\n  }, [length, now, setNow]);\n  React.useEffect(function () {\n    var id = setTimeout(next, autoplay);\n    console.log('timer', id);\n    return function () {\n      console.log('timer stop', id);\n      clearTimeout(id);\n    };\n  }, [autoplay, next]);\n  return __jsx(\"div\", {\n    style: {\n      background: background\n    },\n    className: styles.container\n  }, __jsx(\"div\", _extends({}, restProps, {\n    className: styles.carousel,\n    style: _objectSpread({\n      height: height,\n      width: width,\n      maxHeight: maxHeight\n    }, style)\n  }), __jsx(Flex, {\n    fullWidth: true,\n    wrap: false,\n    itemStyle: {\n      flex: '0 0 100%'\n    },\n    mainSize: 0,\n    className: styles.images,\n    style: {\n      left: \"-\".concat(now * 100, \"%\")\n    }\n  }, images.map(function (image, idx) {\n    return __jsx(Image, {\n      key: idx,\n      src: image,\n      alt: \"\\u56FE\\u7247 \".concat(idx + 1),\n      title: image.split('#').slice(1).join('#'),\n      height: height,\n      maxHeight: maxHeight,\n      clickable: true\n    });\n  }))), __jsx(Left, {\n    className: styles.button,\n    onClick: pre,\n    style: {\n      left: '10px'\n    }\n  }), __jsx(Left, {\n    className: styles.button,\n    style: {\n      transform: 'rotate(180deg)',\n      right: '10px'\n    },\n    onClick: next\n  }), __jsx(Flex, {\n    fullWidth: true,\n    wrap: false,\n    className: styles.nav\n  }, images.map(function (image, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      onClick: function onClick() {\n        return setNow(idx);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      className: concat(styles.nav_item, idx === now ? styles.active : '')\n    }, __jsx(Image, {\n      src: image,\n      alt: \"\\u56FE\\u7247 \".concat(idx + 1),\n      title: image.split('#').slice(1).join('#'),\n      height: '100px'\n    }));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}