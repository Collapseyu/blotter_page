{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Card from '@/components/card';\nimport { Tooltip } from '@/components/popover';\nimport Avatar from '@/components/avatar';\nimport { CheckBox } from '@/components/input';\nimport Button from '@/components/button';\nimport Pagination from '@/components/pagination';\nimport { Flex } from '@/components/container';\nimport Loading from '@/components/loading';\nimport { Context } from '@/utils/global';\nimport { commentsAdmin, commentSet } from '@/utils/api';\nimport moment from '@/utils/moment';\nimport ShowNotification from '@/utils/notification';\nimport { concat } from '@/utils/component';\nimport textStyles from '@/styles/text.less';\nvar defaultAvatar = 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png';\n\nfunction Comment(props) {\n  var comment = props.comment,\n      restProps = _objectWithoutProperties(props, [\"comment\"]);\n\n  var time = moment(comment.time);\n  return __jsx(Flex, _extends({}, restProps, {\n    subAxis: \"flex-start\",\n    wrap: false\n  }), __jsx(Flex.Item, {\n    style: {\n      flex: '0 0 2em',\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, __jsx(Avatar, {\n    src: comment.avatar ? comment.avatar : defaultAvatar,\n    style: {\n      width: '1.5em',\n      height: '1.5em'\n    }\n  })), __jsx(Flex.Item, {\n    style: {\n      flex: '1 1 auto'\n    }\n  }, __jsx(Flex, {\n    mainSize: \"small\",\n    direction: \"TB\",\n    fullWidth: true\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\"\n  }, comment.email, __jsx(Tooltip, {\n    title: time.format('YYYY-MM-DD HH:mm:ss')\n  }, __jsx(\"span\", {\n    className: concat(textStyles.secondary, textStyles.em75)\n  }, time.fromNow()))), !!comment.reply_comment && comment.reply_comment.id !== '000000000000000000000000' ? __jsx(\"div\", {\n    style: {\n      borderLeft: '#ccc 5px solid',\n      paddingLeft: 10\n    }\n  }, __jsx(Comment, {\n    comment: comment.reply_comment\n  })) : null, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: comment.content\n    }\n  }))));\n}\n\nvar AdminComments = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdminComments, _React$Component);\n\n  var _super = _createSuper(AdminComments);\n\n  function AdminComments(props) {\n    var _this;\n\n    _classCallCheck(this, AdminComments);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var r;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 3;\n              return commentsAdmin(_this.state.page, _this.state.size);\n\n            case 3:\n              r = _context.sent;\n\n              _this.setState({\n                data: r.comments,\n                total: r.total,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (page, size) {\n      _this.setState({\n        page: page,\n        size: size\n      }, _this.getData);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkboxChange\", function (checked, id, key) {\n      _this.setState(function (state) {\n        var data = state.data;\n        data.map(function (item) {\n          if (item.id === id) {\n            item[key] = checked;\n          }\n\n          return item;\n        });\n        return {\n          data: data\n        };\n      });\n    });\n\n    _this.state = {\n      loading: false,\n      total: 0,\n      data: [],\n      page: 1,\n      size: 10\n    };\n    return _this;\n  }\n\n  _createClass(AdminComments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var items = [{\n        key: 'show',\n        value: '显示'\n      }, {\n        key: 'ad',\n        value: '广告'\n      }, {\n        key: 'recv',\n        value: '接收提醒'\n      }];\n      return __jsx(Card, {\n        neumorphism: true\n      }, __jsx(Context.Consumer, null, function (context) {\n        return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\u8BC4\\u8BBA\\u5217\\u8868|\\u540E\\u53F0|\".concat(context.blog_name))), __jsx(Flex, {\n          fullWidth: true,\n          direction: \"TB\"\n        }, __jsx(\"p\", null, \"\\u5171 \", _this2.state.total, \" \\u6761\\u8BC4\\u8BBA\"), __jsx(Loading, {\n          loading: _this2.state.loading\n        }, _this2.state.data.map(function (comment, idx) {\n          return __jsx(Flex, {\n            key: comment.id,\n            mainAxis: \"space-between\",\n            wrap: !context.big_screen\n          }, __jsx(Flex.Item, {\n            style: {\n              flex: '1 1 auto'\n            }\n          }, __jsx(Comment, {\n            comment: comment\n          })), __jsx(Flex.Item, {\n            style: {\n              flex: '0 0 auto'\n            }\n          }, __jsx(Flex, {\n            direction: \"TB\",\n            subAxis: \"flex-end\"\n          }, __jsx(\"a\", {\n            href: comment.url,\n            target: \"_blank\"\n          }, \"\\u300A\", comment.title !== '' ? comment.title : '评论区', \"\\u300B\"), __jsx(Flex, null, items.map(function (item) {\n            return __jsx(CheckBox, {\n              value: comment[item.key],\n              onChange: function onChange(c) {\n                return _this2.setState(function (state) {\n                  var data = state.data;\n                  data[idx][item.key] = c;\n                  return {\n                    data: _toConsumableArray(data)\n                  };\n                });\n              }\n            }, item.value);\n          })), __jsx(Button, {\n            neumorphism: true,\n            onClick: /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n                var r;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return commentSet(comment.id, comment.ad, comment.recv, comment.show);\n\n                      case 2:\n                        r = _context2.sent;\n                        ShowNotification(r);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }()\n          }, \"\\u4FDD\\u5B58\"))));\n        })), __jsx(Pagination, {\n          disabled: _this2.state.loading,\n          sizeSelect: [5, 10, 20, 50, 100],\n          page: _this2.state.page,\n          size: _this2.state.size,\n          total: _this2.state.total,\n          onChange: _this2.onChange\n        })));\n      }));\n    }\n  }]);\n\n  return AdminComments;\n}(React.Component);\n\n_defineProperty(AdminComments, \"defaultProps\", {});\n\nexport default AdminComments;","map":null,"metadata":{},"sourceType":"module"}