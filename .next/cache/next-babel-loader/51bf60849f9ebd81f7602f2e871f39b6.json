{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Success } from '@/components/svg';\nimport { concat } from '@/utils/component';\nimport styles from './checkbox.less';\nexport default function CheckBox(props) {\n  const [checked, setChecked] = React.useState(false);\n  const {\n    value,\n    switchStyle = false,\n    checkText,\n    uncheckText,\n    onChange = typeof value === 'undefined' ? v => setChecked(v) : () => {},\n    children,\n    getValueCallback = () => {},\n    setValueCallback = () => {},\n    hint\n  } = props;\n  const isChecked = !!value || checked;\n  React.useEffect(() => getValueCallback(() => isChecked), [getValueCallback]);\n  React.useEffect(() => setValueCallback(setChecked), [setValueCallback]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: concat(switchStyle ? styles.switch : styles.checkbox, isChecked ? styles.checked : ''),\n    onClick: () => onChange(!isChecked)\n  }, __jsx(\"div\", {\n    className: styles.icon\n  }, isChecked && !switchStyle ? __jsx(Success, null) : null), __jsx(\"div\", {\n    className: styles.text\n  }, isChecked && !!checkText ? checkText : !isChecked && !!uncheckText ? uncheckText : children)), !!hint ? __jsx(\"div\", {\n    className: styles.hint\n  }, hint) : null);\n}","map":null,"metadata":{},"sourceType":"module"}