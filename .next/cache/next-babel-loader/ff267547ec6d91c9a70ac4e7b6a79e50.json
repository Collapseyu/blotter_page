{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport { Flex } from '@/components/container';\nimport styles from './radio.less';\nexport default function Radio(props) {\n  var _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'LR' : _props$direction,\n      options = props.options,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? '' : _props$defaultValue,\n      value = props.value,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      _props$setValueCallba = props.setValueCallback,\n      setValueCallback = _props$setValueCallba === void 0 ? function () {} : _props$setValueCallba,\n      _props$getValueCallba = props.getValueCallback,\n      getValueCallback = _props$getValueCallba === void 0 ? function () {} : _props$getValueCallba,\n      className = props.className,\n      style = props.style,\n      id = props.id;\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var nowValue = typeof value === 'undefined' ? state : value;\n  React.useEffect(function () {\n    setValueCallback(setState);\n  }, [setValueCallback, setState]);\n  React.useEffect(function () {\n    getValueCallback(function () {\n      return options[nowValue];\n    });\n  }, [getValueCallback, nowValue, options]);\n  return __jsx(Flex, {\n    direction: direction,\n    mainAxis: \"flex-start\",\n    subSize: \"middle\",\n    id: id,\n    className: concat(className, styles.radio),\n    style: style\n  }, options.map(function (option) {\n    return __jsx(\"div\", {\n      key: option.key,\n      className: styles.option,\n      onClick: function onClick() {\n        onChange(option.key, option.value);\n        setState(option.key);\n      }\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      checked: option.key === nowValue\n    }), option.key);\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}