{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Image from '@/components/image';\nimport TagPart from '@/components/tag';\nimport Card from '@/components/card';\nimport { Flex } from '@/components/container';\nimport { Eye, Calendar, Tag, Edit, Document } from '@/components/svg';\nimport { A } from '@/components/button';\nimport Loading from '@/components/loading';\nimport { Context } from '@/utils/global';\nimport { concat } from '@/utils/component';\nimport { formatSecond } from '@/utils/time';\nimport textStyles from '@/styles/text.module.scss';\nimport styles from './post_card.module.scss';\nexport function CardContent(props) {\n  const {\n    inPost = false,\n    post\n  } = props;\n  const context = React.useContext(Context);\n  const title = [__jsx(\"h2\", {\n    key: \"title\",\n    className: concat(textStyles.color, textStyles.ellipsis),\n    title: post.title\n  }, post.title), __jsx(\"p\", {\n    key: \"abstract\",\n    className: textStyles.color\n  }, post.abstract)];\n  const publishTime = formatSecond(post.publish_time);\n  const editTime = formatSecond(post.publish_time);\n  return __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true,\n    className: styles.post_card\n  }, !inPost ? __jsx(Link, {\n    href: \"/post/[url]\",\n    as: `/post/${post.url}`\n  }, __jsx(\"a\", {\n    className: textStyles.color\n  }, title)) : title, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    className: styles.info\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Eye, null), __jsx(\"span\", {\n    style: {\n      fontSize: '0.8em'\n    }\n  }, !!post.view ? post.view : 0)), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Calendar, null), __jsx(\"time\", {\n    dateTime: publishTime.replace(' ', 'T') + 'T+08',\n    style: {\n      fontSize: '0.8em'\n    }\n  }, publishTime)), post.publish_time == post.edit_time ? null : __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Edit, null), __jsx(\"time\", {\n    dateTime: editTime.replace(' ', 'T') + 'T+08',\n    style: {\n      fontSize: '0.8em'\n    }\n  }, editTime)), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Document, null), __jsx(\"span\", {\n    style: {\n      fontSize: '0.8em'\n    }\n  }, `本文章共 ${post.length} 字 / 预计阅读时间 ${Math.max(1, Math.round(post.length / 400))} 分`)), inPost && (context.user.permission & 1) == 1 ? __jsx(Link, {\n    href: `/admin/post?url=${post.url}`,\n    passHref: true\n  }, __jsx(A, {\n    primary: true,\n    neumorphism: true,\n    size: \"small\",\n    target: \"_blank\"\n  }, \"\\u7F16\\u8F91\")) : null), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subSize: \"middle\"\n  }, [__jsx(Tag, {\n    key: \"tag_icon\"\n  }), ...post.tags.map(tag => __jsx(TagPart, {\n    key: tag.short,\n    tag: tag\n  }))]));\n}\nexport default function PostCard(props) {\n  const post = props.post;\n  const loading = props.loading || typeof props.post === 'undefined';\n  return __jsx(Card, {\n    neumorphism: true,\n    cover: !loading && post.head_image ? __jsx(Image, {\n      src: post.head_image,\n      height: \"300px\",\n      alt: `文章『${post.title}』的头图`,\n      title: post.title\n    }) : null\n  }, loading ? __jsx(Loading, null) : __jsx(CardContent, {\n    post: post\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}