{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from '@/components/button';\nimport { Flex } from '@/components/container';\nimport { Minus, Plus, Save, Image, Edit, Fold, Unfold } from '@/components/svg';\nimport { QiniuModal } from '@/components/upload';\nimport styles from './post.less';\n\nfunction Press(props) {\n  var initArg = props.initArg,\n      _props$onPressing = props.onPressing,\n      onPressing = _props$onPressing === void 0 ? function () {} : _props$onPressing,\n      _props$ms = props.ms,\n      ms = _props$ms === void 0 ? 500 : _props$ms,\n      restProps = _objectWithoutProperties(props, [\"initArg\", \"onPressing\", \"ms\"]);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return __jsx(Button, _extends({}, restProps, {\n    onMouseDown: function onMouseDown(e) {\n      var arg = initArg;\n      clearInterval(value);\n      var interval = setInterval(function () {\n        arg = onPressing(arg);\n      }, ms);\n      setValue(interval);\n    },\n    onMouseUp: function onMouseUp(e) {\n      return clearInterval(value);\n    }\n  }));\n}\n\nfunction RenderOffset(props) {\n  var onScrollOffset = props.onScrollOffset;\n  var diff = 10;\n  return __jsx(Flex, null, __jsx(Press, {\n    neumorphism: true,\n    size: \"small\",\n    initArg: -diff,\n    onClick: function onClick() {\n      return onScrollOffset(-diff);\n    },\n    onPressing: function onPressing(arg) {\n      onScrollOffset(arg - diff);\n      return arg - diff;\n    },\n    ms: 100,\n    icon: __jsx(Minus, null)\n  }), __jsx(Press, {\n    neumorphism: true,\n    size: \"small\",\n    initArg: diff,\n    onClick: function onClick() {\n      return onScrollOffset(diff);\n    },\n    onPressing: function onPressing(arg) {\n      onScrollOffset(arg + diff);\n      return arg + diff;\n    },\n    ms: 100,\n    icon: __jsx(Plus, null)\n  }));\n}\n\nfunction RenderImages() {\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1];\n\n  return __jsx(React.Fragment, null, __jsx(QiniuModal, {\n    show: show,\n    onClose: function onClose() {\n      return setShow(false);\n    },\n    defaultTab: \"upload\"\n  }), __jsx(Button, {\n    circle: true,\n    danger: show,\n    neumorphism: true,\n    onClick: function onClick() {\n      return setShow(!show);\n    },\n    icon: __jsx(Image, null)\n  }));\n}\n\nfunction RenderPreviewButton(props) {\n  var previews = ['编辑', '预览', '双栏'];\n  var preview = props.preview,\n      onPreviewClick = props.onPreviewClick;\n  return __jsx(Flex, {\n    direction: \"TB\",\n    mainSize: \"small\"\n  }, previews.map(function (item, idx) {\n    return __jsx(Button, {\n      key: idx,\n      neumorphism: true,\n      clicked: preview === idx,\n      size: \"small\",\n      onClick: function onClick() {\n        return onPreviewClick(idx);\n      }\n    }, item);\n  }));\n}\n\nfunction JumpButton() {\n  return __jsx(Button, {\n    circle: true,\n    neumorphism: true,\n    onClick: function onClick() {\n      var editor = document.getElementById('editor');\n\n      if (!!editor) {\n        var top = editor.getBoundingClientRect().top + window.pageYOffset;\n\n        if (top > 0) {\n          scrollTo(0, top - 10);\n        }\n      }\n    },\n    icon: __jsx(Edit, null)\n  });\n}\n\nfunction FoldButtons(props) {\n  var onFold = props.onFold,\n      onUnfold = props.onUnfold;\n  return __jsx(Flex, null, __jsx(Button, {\n    neumorphism: true,\n    size: \"small\",\n    icon: __jsx(Fold, null),\n    onClick: onFold\n  }), __jsx(Button, {\n    neumorphism: true,\n    size: \"small\",\n    icon: __jsx(Unfold, null),\n    onClick: onUnfold\n  }));\n}\n\nexport default function RenderFixedButton(props) {\n  var preview = props.preview,\n      onPreviewClick = props.onPreviewClick,\n      submitDisabled = props.submitDisabled,\n      onSubmit = props.onSubmit,\n      onScrollOffset = props.onScrollOffset,\n      onFold = props.onFold,\n      onUnfold = props.onUnfold;\n  return __jsx(Flex, {\n    direction: \"TB\",\n    className: styles.fixed_button\n  }, __jsx(RenderPreviewButton, {\n    preview: preview,\n    onPreviewClick: onPreviewClick\n  }), __jsx(RenderOffset, {\n    onScrollOffset: onScrollOffset\n  }), __jsx(FoldButtons, {\n    onFold: onFold,\n    onUnfold: onUnfold\n  }), __jsx(JumpButton, null), __jsx(RenderImages, null), __jsx(Button, {\n    neumorphism: true,\n    loading: submitDisabled,\n    onClick: onSubmit,\n    circle: true,\n    icon: __jsx(Save, null),\n    primary: true\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}