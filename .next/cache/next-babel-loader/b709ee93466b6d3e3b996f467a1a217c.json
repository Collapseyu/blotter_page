{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { concat } from '@/utils/component';\nimport Body from '../body';\nimport Card from '@/components/card';\nimport { Close } from '@/components/svg';\nimport Button from '@/components/button';\nimport styles from './modal.less';\n\nconst ModalContent = props => {\n  const {\n    onClose,\n    className,\n    style,\n    children\n  } = props;\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: concat(className, styles.modal),\n    style: style\n  }, __jsx(Card, {\n    style: {\n      background: 'var(--background)'\n    }\n  }, !!onClose ? __jsx(Button, {\n    icon: __jsx(Close, null),\n    style: {\n      position: 'relative',\n      top: -15,\n      right: -15,\n      marginBottom: -15,\n      float: 'right'\n    },\n    onClick: () => onClose()\n  }) : null, __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    }\n  }, children))), __jsx(\"div\", {\n    className: styles.dimmed,\n    onClick: () => onClose()\n  }));\n};\n\nconst Modal = props => {\n  const {\n    show = true\n  } = props;\n  return show ? __jsx(Body, null, __jsx(ModalContent, props)) : null;\n};\n\nconst info = props => {\n  const {\n    update,\n    remove\n  } = Body.Insert(({\n    update,\n    remove\n  }) => __jsx(ModalContent, _extends({}, props, {\n    onClose: remove\n  })));\n  return {\n    update,\n    remove\n  };\n};\n\nexport default Object.assign(Modal, {\n  info\n});","map":null,"metadata":{},"sourceType":"module"}