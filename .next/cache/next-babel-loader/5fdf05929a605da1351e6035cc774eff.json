{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Card from '@/components/card';\nimport Button from '@/components/button';\nimport Popover from '@/components/popover';\nimport Table from '@/components/table';\nimport Input from '@/components/input';\nimport SVG, { Delete, Plus, Save } from '@/components/svg';\nimport { Flex } from '@/components/container';\nimport { Context } from '@/utils/global';\nimport { menus, menusSet } from '@/utils/api';\nimport ShowNotification from '@/utils/notification';\nimport randomString from '@/utils/random';\n\nclass AdminMenus extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getData\", async () => {\n      this.setState({\n        loading: true\n      });\n      var r = await menus();\n      this.setState({\n        data: r,\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"renderEditableCell\", (idx, key) => {\n      return __jsx(Input, {\n        transform: true,\n        value: this.state.data[idx][key],\n        onChange: value => {\n          this.setState(state => {\n            var {\n              data\n            } = state;\n            data[idx][key] = value;\n            return {\n              data\n            };\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"columns\", [{\n      key: 'name',\n      title: '名称',\n      tooltip: t => t,\n      minWidth: '5em',\n      ellipsis: true,\n      render: (_, __, idx) => {\n        return this.renderEditableCell(idx, 'name');\n      }\n    }, {\n      key: 'link',\n      title: '链接',\n      tooltip: t => t,\n      minWidth: '5em',\n      ellipsis: true,\n      render: (_, __, idx) => {\n        return this.renderEditableCell(idx, 'link');\n      }\n    }, {\n      key: 'icon',\n      title: '图标',\n      tooltip: t => t,\n      minWidth: '5em',\n      maxWidth: '15em',\n      ellipsis: true,\n      render: (_, __, idx) => {\n        return this.renderEditableCell(idx, 'icon');\n      }\n    }, {\n      key: 'preview',\n      title: '预览',\n      minWidth: '5em',\n      maxWidth: '10em',\n      render: (value, record) => __jsx(SVG, {\n        icon: record.icon\n      })\n    }, {\n      key: 'op',\n      title: '操作',\n      render: (_, record, idx) => __jsx(Popover, {\n        shadow: true,\n        card: true,\n        trigger: ['click'],\n        component: __jsx(Card, null, __jsx(\"span\", null, \"\\u771F\\u7684\\u8981\\u5220\\u9664\\u4E48\\uFF1F\"), __jsx(Button, {\n          onClick: () => {\n            this.setState(state => {\n              var data = state.data;\n              data = data.filter(item => item.name !== record.name);\n              data.map(d => d);\n              return {\n                data\n              };\n            });\n          },\n          size: \"small\",\n          danger: true,\n          neumorphism: true,\n          primary: true\n        }, \"\\u5220\\u9664\\uFF01\"))\n      }, __jsx(Button, {\n        size: \"small\",\n        danger: true,\n        neumorphism: true,\n        prefix: __jsx(Delete, null)\n      }, \"\\u5220\\u9664\"))\n    }]);\n\n    _defineProperty(this, \"renderTableHead\", () => __jsx(Flex, {\n      mainAxis: \"flex-end\"\n    }, __jsx(Button, {\n      neumorphism: true,\n      onClick: () => {\n        this.setState(state => {\n          var {\n            data\n          } = state;\n          data.push({\n            name: randomString(),\n            link: '',\n            icon: ''\n          });\n          data = data.map(d => d);\n          return {\n            data\n          };\n        });\n      },\n      prefix: __jsx(Plus, null)\n    }, \"\\u65B0\\u5EFA\"), __jsx(Button, {\n      neumorphism: true,\n      primary: true,\n      loading: this.state.submitLoading,\n      onClick: async () => {\n        this.setState({\n          submitLoading: true\n        });\n        var r = await menusSet(this.state.data);\n        ShowNotification(r);\n        this.setState({\n          submitLoading: false\n        });\n      },\n      prefix: __jsx(Save, null)\n    }, \"\\u4FDD\\u5B58\\u4FEE\\u6539\")));\n\n    this.state = {\n      loading: false,\n      data: [],\n      submitLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return __jsx(Card, null, __jsx(Context.Consumer, null, context => __jsx(Head, null, __jsx(\"title\", null, `菜单列表|后台|${context.blog_name}`))), this.renderTableHead(), __jsx(Table, {\n      columns: this.columns,\n      data: this.state.data,\n      loading: this.state.loading,\n      pagination: false,\n      onMove: (i, j) => {\n        this.setState(state => {\n          var {\n            data\n          } = state;\n          var temp = data[i];\n          data[i] = data[j];\n          data[j] = temp;\n          data = data.map(d => d);\n          return {\n            data\n          };\n        });\n      }\n    }));\n  }\n\n}\n\n_defineProperty(AdminMenus, \"defaultProps\", {});\n\nexport default AdminMenus;","map":null,"metadata":{},"sourceType":"module"}