{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Triangle, Filter } from '@/components/svg';\nimport Button from '@/components/button';\nimport { CheckBox } from '@/components/input';\nimport { Flex } from '@/components/container';\nimport { Left, Loading } from '@/components/svg';\nimport Pagination from '@/components/pagination';\nimport { Tooltip, Modal } from '@/components/popover';\nimport DragableRow from './row';\nimport { concat } from '@/utils/component';\nimport randomString from '@/utils/random';\nimport styles from './table.module.scss';\nimport textStyles from '@/styles/text.module.scss';\nconst defaultState = {\n  page: 1,\n  size: 10,\n  sortKey: '',\n  sortAscending: false,\n  expanded: {},\n  filterKey: [],\n  filterValue: {}\n};\n\nfunction stateReducer(state, action) {\n  switch (action.name) {\n    case 'init':\n      {\n        return defaultState;\n      }\n\n    case 'page':\n      {\n        const {\n          page,\n          size\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          page,\n          size,\n          expanded: {}\n        });\n      }\n\n    case 'sort':\n      {\n        const {\n          sortKey,\n          sortAscending\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          page: 1,\n          sortKey,\n          sortAscending,\n          expanded: {}\n        });\n      }\n\n    case 'expand':\n      {\n        const {\n          index\n        } = action;\n        if (index === 'init') return _objectSpread(_objectSpread({}, state), {}, {\n          expanded: {}\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          expanded: _objectSpread(_objectSpread({}, state.expanded), {}, {\n            [index]: !state.expanded[index]\n          })\n        });\n      }\n\n    case 'filter-key':\n      {\n        const {\n          key,\n          enable\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filterKey: enable ? state.filterKey.concat(key) : state.filterKey.filter(item => item !== key)\n        });\n      }\n\n    case 'filter-value':\n      {\n        const {\n          key,\n          value\n        } = action;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filterValue: _objectSpread(_objectSpread({}, state.filterValue), {}, {\n            [key]: value\n          })\n        });\n      }\n  }\n}\n\nexport default function Table(props) {\n  const {\n    columns,\n    data,\n    style,\n    showHeader = true,\n    defaultOrder = {\n      sortKey: '',\n      ascending: false\n    },\n    pagination = false,\n    loading = false,\n    expand,\n    onChange,\n    onMove\n  } = props; // 将简写的列拓展为标准的 Column 类型\n\n  const cols = React.useMemo(() => columns.map(col => typeof col === 'string' ? {\n    key: col\n  } : col), [columns]);\n  const columnObject = React.useMemo(() => Object.assign({}, ...cols.map(col => ({\n    [col.key]: col\n  }))), [cols]);\n  const dragKey = React.useMemo(() => randomString(), []);\n  const [state, setState] = React.useReducer(stateReducer, _objectSpread(_objectSpread({}, defaultState), {}, {\n    sortKey: defaultOrder.sortKey,\n    sortAscending: defaultOrder.ascending,\n    page: typeof pagination !== 'boolean' ? pagination.page : 1,\n    size: typeof pagination !== 'boolean' ? pagination.size : 10\n  }));\n  const {\n    page,\n    size,\n    sortKey,\n    sortAscending,\n    expanded,\n    filterKey,\n    filterValue\n  } = state; // 过滤器弹出框\n\n  const [filterModal, setFilterModal] = React.useState(false);\n  const filteredData = React.useMemo(() => {\n    var showData = data.concat([]);\n    if (typeof onChange === 'undefined') Object.keys(filterKey).map(key => showData = columnObject[key] && columnObject[key].filter ? showData.filter((item, idx) => columnObject[key].filter.onFilter(filterValue[key], item, idx)) : showData);\n    return showData;\n  }, [data, onChange, columnObject, filterKey]);\n  const paginationProps = React.useMemo(() => _objectSpread(_objectSpread({}, {\n    page: page,\n    size: size,\n    total: filteredData.length,\n    onChange: (page, size) => {\n      setState({\n        name: 'page',\n        size,\n        page\n      });\n    }\n  }), typeof pagination !== 'boolean' ? pagination : {}), [pagination, page, size, filteredData, setState]); // 列表内容操作\n\n  const showData = React.useMemo(() => {\n    var showData = filteredData;\n\n    if (typeof onChange === 'undefined') {\n      if (!!columnObject && !!columnObject[sortKey]) {\n        const sorter = columnObject[sortKey].sorter;\n\n        if (typeof sorter === 'function') {\n          showData.sort(sorter);\n          if (!sortAscending) showData.reverse();\n        }\n      }\n\n      if (pagination === true || pagination !== false && !pagination.onChange) {\n        showData = showData.slice((paginationProps.page - 1) * paginationProps.size, paginationProps.page * paginationProps.size);\n      }\n    }\n\n    return showData;\n  }, [filteredData, onChange, columnObject, sortKey, sortAscending, pagination, paginationProps]);\n  const onTableChange = React.useCallback((_page, _size, _sortKey, _sortAscending, _filter) => {\n    if (sortKey !== _sortKey || sortAscending !== _sortAscending) {\n      setState({\n        name: 'sort',\n        sortKey: _sortKey,\n        sortAscending: _sortAscending\n      });\n    } else {\n      setState({\n        name: 'page',\n        page: _page,\n        size: _size\n      });\n    }\n\n    if (!!onChange) onChange(_page, _size, _sortKey, _sortAscending, _filter);\n  }, [sortKey, sortAscending, setState, onChange]);\n  const DndProviderComponent = React.useMemo(() => !!onMove ? DndProvider : props => props.children, [onMove]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: concat(styles.table),\n    style: style,\n    children: [!!loading && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.loading,\n      children: loading === true ? /*#__PURE__*/_jsx(Loading, {}) : loading\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: concat(styles.wrapper, !!loading ? styles.onloading : ''),\n      children: /*#__PURE__*/_jsx(DndProviderComponent, {\n        backend: HTML5Backend,\n        children: /*#__PURE__*/_jsxs(\"table\", {\n          children: [showHeader ? /*#__PURE__*/_jsx(\"thead\", {\n            style: {\n              visibility: showHeader ? 'visible' : 'hidden'\n            },\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              children: [!!expand ? /*#__PURE__*/_jsx(\"td\", {}) : null, cols.map(col => /*#__PURE__*/_jsx(\"th\", {\n                style: col.headStyle,\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.title,\n                  children: [!col.title ? col.key : typeof col.title === 'function' ? col.title(col.key) : col.title, !!col.sorter ? /*#__PURE__*/_jsxs(\"span\", {\n                    className: styles.sorter,\n                    children: [/*#__PURE__*/_jsx(Button, {\n                      className: styles.sorter_icon,\n                      icon: /*#__PURE__*/_jsx(Triangle, {}),\n                      size: \"small\",\n                      style: {\n                        opacity: sortKey === col.key && sortAscending ? 1 : 0.25\n                      },\n                      onClick: () => {\n                        onTableChange(1, size, sortKey === col.key && sortAscending ? '' : col.key, true, Object.assign({}, ...filterKey.map(key => ({\n                          key: filterValue[key]\n                        }))));\n                      }\n                    }), /*#__PURE__*/_jsx(Button, {\n                      className: styles.sorter_icon,\n                      icon: /*#__PURE__*/_jsx(Triangle, {\n                        style: {\n                          transform: 'rotate(180deg)'\n                        }\n                      }),\n                      size: \"small\",\n                      style: {\n                        opacity: sortKey === col.key && !sortAscending ? 1 : 0.25\n                      },\n                      onClick: () => {\n                        onTableChange(1, size, sortKey === col.key && sortAscending ? '' : col.key, false, Object.assign({}, ...filterKey.map(key => ({\n                          key: filterValue[key]\n                        }))));\n                      }\n                    })]\n                  }) : null, !!col.filter ? /*#__PURE__*/_jsx(\"span\", {\n                    className: styles.filter,\n                    children: /*#__PURE__*/_jsx(Button, {\n                      className: styles.sorter_icon,\n                      icon: /*#__PURE__*/_jsx(Filter, {}),\n                      size: \"small\",\n                      style: {\n                        opacity: !!filterKey[col.key] ? 1 : 0.25\n                      },\n                      onClick: () => {\n                        setFilterModal(col);\n                      }\n                    })\n                  }) : null]\n                })\n              }, col.key))]\n            })\n          }) : null, /*#__PURE__*/_jsx(\"tbody\", {\n            children: showData.map((item, idx) => [/*#__PURE__*/_jsxs(DragableRow, {\n              index: idx,\n              dragKey: dragKey,\n              onMove: onMove,\n              children: [!!expand ? /*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(Left, {\n                  className: concat(styles.prefix, !expanded[idx] ? styles.close : ''),\n                  onClick: () => setState({\n                    name: 'expand',\n                    index: idx\n                  })\n                })\n              }) : null, cols.map(col => {\n                const content = !!col.render ? col.render(item[col.key], item, idx, data) : item[col.key];\n                const tooltip = !!col.tooltip ? col.tooltip === true ? content.toString() : typeof col.tooltip === 'function' ? col.tooltip(item[col.key], item, idx, data) : col.tooltip : undefined;\n                return /*#__PURE__*/_jsx(\"td\", {\n                  className: !!col.ellipsis ? textStyles.ellipsis : '',\n                  style: _objectSpread(_objectSpread({}, {\n                    width: col.width,\n                    minWidth: col.minWidth,\n                    maxWidth: col.maxWidth\n                  }), col.style),\n                  children: !!tooltip ? /*#__PURE__*/_jsx(Tooltip, {\n                    title: tooltip,\n                    style: {\n                      display: 'inline'\n                    },\n                    children: content\n                  }) : content\n                }, col.key);\n              })]\n            }, idx), !!expand && !!expanded[idx] ? /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"td\", {}), /*#__PURE__*/_jsx(\"td\", {\n                colSpan: cols.length,\n                children: expand(item, idx)\n              })]\n            }, `${idx}-expand`) : null])\n          }), cols.filter(col => !!col.footer).length > 0 ? /*#__PURE__*/_jsx(\"tfoot\", {\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              children: [!!expand ? /*#__PURE__*/_jsx(\"td\", {}) : null, cols.map(col => /*#__PURE__*/_jsx(\"td\", {\n                style: col.footStyle,\n                children: !col.footer ? null : typeof col.footer === 'function' ? col.footer(col.key) : col.footer\n              }, col.key))]\n            })\n          }) : null]\n        })\n      })\n    }), pagination !== false ? /*#__PURE__*/_jsx(Pagination, _objectSpread(_objectSpread({}, paginationProps), {}, {\n      style: _objectSpread({\n        margin: 5\n      }, paginationProps.style),\n      onChange: (page, size) => onTableChange(page, size, sortKey, sortAscending, Object.assign({}, ...filterKey.map(key => ({\n        key: filterValue[key]\n      }))))\n    })) : null, /*#__PURE__*/_jsx(Modal, {\n      show: filterModal !== false,\n      onClose: () => setFilterModal(false),\n      children: filterModal === false ? null : /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsxs(Flex, {\n          direction: \"TB\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(Flex, {\n            mainAxis: \"flex-start\",\n            subAxis: \"center\",\n            subSize: \"middle\",\n            children: filterModal.filter.filters.map(item => /*#__PURE__*/_jsx(CheckBox, {\n              value: !!filterValue[filterModal.key] && filterValue[filterModal.key].indexOf(item) !== -1,\n              onChange: checked => {\n                var array = filterValue[filterModal.key];\n                if (!array) array = [];\n\n                if (checked) {\n                  array.push(item);\n                } else {\n                  array = array.filter(i => i !== item);\n                }\n\n                setState({\n                  name: 'filter-value',\n                  key: filterModal.key,\n                  value: array\n                });\n              },\n              children: item\n            }, item))\n          }), /*#__PURE__*/_jsxs(Flex, {\n            mainAxis: \"flex-end\",\n            subAxis: \"center\",\n            subSize: \"middle\",\n            children: [/*#__PURE__*/_jsx(Button, {\n              onClick: () => {\n                setFilterModal(false);\n                setState({\n                  name: 'filter-key',\n                  enable: false,\n                  key: filterModal.key\n                });\n                onTableChange(1, size, sortKey, sortAscending, Object.assign({}, ...filterKey.map(key => ({\n                  key: filterValue[key]\n                }))));\n              },\n              children: \"\\u53D6\\u6D88\\u7B5B\\u9009\"\n            }), /*#__PURE__*/_jsx(Button, {\n              onClick: () => {\n                setState({\n                  name: 'filter-key',\n                  enable: true,\n                  key: filterModal.key\n                });\n                setFilterModal(false);\n                onTableChange(1, size, sortKey, sortAscending, Object.assign({}, ...filterKey.map(key => ({\n                  key: filterValue[key]\n                }))));\n              },\n              children: \"\\u4F7F\\u7528\\u7B5B\\u9009\"\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}