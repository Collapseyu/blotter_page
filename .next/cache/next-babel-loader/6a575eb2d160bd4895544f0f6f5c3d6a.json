{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Flex } from '@/components/container';\nimport Button from '@/components/button';\nimport { Dots, Pre, Next } from '@/components/svg';\nimport Input from '@/components/input';\n\nfunction defaultRender(current, pageNumber, size, page, onChange, disabled) {\n  switch (page) {\n    case -2:\n      {\n        return __jsx(Button, {\n          neumorphism: true,\n          disabled: disabled || current - 1 < 1,\n          onClick: function onClick() {\n            return onChange(current - 1, size);\n          },\n          icon: __jsx(Pre, null)\n        });\n      }\n\n    case -3:\n      {\n        return __jsx(Button, {\n          neumorphism: true,\n          disabled: disabled || current + 1 > pageNumber,\n          onClick: function onClick() {\n            return onChange(current + 1, size);\n          },\n          icon: __jsx(Next, null)\n        });\n      }\n\n    case -1:\n      {\n        return __jsx(Dots, null);\n      }\n\n    default:\n      {\n        return __jsx(Button, {\n          neumorphism: true,\n          disabled: disabled || current === page,\n          clicked: current === page,\n          onClick: function onClick() {\n            return onChange(page, size);\n          }\n        }, page);\n      }\n  }\n}\n\nexport default function Pagination(props) {\n  var _props$page = props.page,\n      page = _props$page === void 0 ? 1 : _props$page,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 10 : _props$size,\n      _props$total = props.total,\n      total = _props$total === void 0 ? 0 : _props$total,\n      _props$range = props.range,\n      range = _props$range === void 0 ? 3 : _props$range,\n      _props$sizeSelect = props.sizeSelect,\n      sizeSelect = _props$sizeSelect === void 0 ? [] : _props$sizeSelect,\n      _props$render = props.render,\n      render = _props$render === void 0 ? defaultRender : _props$render,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      className = props.className,\n      style = props.style,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled;\n  var pageNumber = React.useMemo(function () {\n    return Math.ceil(total / size);\n  }, [total, size]);\n  var pages = Array(range * 2 + 1).fill(0).map(function (_, idx) {\n    return idx + page - range;\n  }).filter(function (p) {\n    return p >= 1 && p <= pageNumber;\n  });\n\n  if (pages.length > 0) {\n    if (pages[0] === 2) pages.unshift(1);else if (pages[0] > 2) pages.unshift(1, -1);\n    if (pages[pages.length - 1] === pageNumber - 1) pages.push(pageNumber);else if (pages[pages.length - 1] < pageNumber - 1) pages.push(-1, pageNumber);\n  }\n\n  pages.unshift(-2);\n  pages.push(-3);\n  var items = pages.map(function (p) {\n    return __jsx(Flex.Item, {\n      key: p\n    }, render(page, pageNumber, size, p, onChange, disabled));\n  });\n  if (!!sizeSelect && sizeSelect.length > 1) items.push(__jsx(Input, {\n    key: \"size\",\n    editable: false,\n    value: \"\".concat(size, \"\\u4E2A/\\u9875\"),\n    options: sizeSelect.map(function (s) {\n      return {\n        key: \"\".concat(s, \"\\u4E2A/\\u9875\"),\n        value: s\n      };\n    }),\n    onSelect: function onSelect(_, v) {\n      return onChange(page, v);\n    }\n  }));\n  return __jsx(Flex, {\n    mainAxis: \"flex-end\",\n    subSize: \"middle\",\n    className: className,\n    style: style\n  }, items);\n}","map":null,"metadata":{},"sourceType":"module"}