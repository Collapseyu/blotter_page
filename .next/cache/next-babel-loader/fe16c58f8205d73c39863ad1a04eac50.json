{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { concat } from '@/utils/component';\nimport styles from './loading.module.scss';\nexport default function Loading(props) {\n  var _props$count = props.count,\n      count = _props$count === void 0 ? 5 : _props$count,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? true : _props$loading,\n      className = props.className,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"count\", \"loading\", \"className\", \"children\"]);\n\n  return __jsx(\"div\", _extends({\n    className: concat(styles.wrapper, loading ? styles.onloading : '', className)\n  }, restProps), __jsx(\"div\", {\n    className: styles.loading\n  }, Array(count).fill(0).map(function (_, idx) {\n    return __jsx(\"span\", {\n      key: idx,\n      style: {\n        animationDelay: \"\".concat(idx * 0.2, \"s\")\n      }\n    });\n  })), children && __jsx(\"div\", {\n    className: styles.inner\n  }, children));\n}","map":null,"metadata":{},"sourceType":"module"}