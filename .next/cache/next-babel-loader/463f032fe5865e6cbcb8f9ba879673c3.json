{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Image from '@/components/image';\nimport TagPart from '@/components/tag';\nimport Card from '@/components/card';\nimport { Flex } from '@/components/container';\nimport { Eye, Calendar, Tag, Edit } from '@/components/svg';\nimport { A } from '@/components/button';\nimport Loading from '@/components/loading';\nimport { Context } from '@/utils/global';\nimport { concat } from '@/utils/component';\nimport { formatSecond } from '@/utils/time';\nimport textStyles from '@/styles/text.less';\nexport function CardContent(props) {\n  var _props$inPost = props.inPost,\n      inPost = _props$inPost === void 0 ? false : _props$inPost,\n      post = props.post;\n  var context = React.useContext(Context);\n  var title = [__jsx(\"h2\", {\n    key: \"title\",\n    className: concat(textStyles.color, textStyles.ellipsis),\n    title: post.title\n  }, post.title), __jsx(\"p\", {\n    key: \"abstract\",\n    className: textStyles.color\n  }, post[\"abstract\"])];\n  var publishTime = formatSecond(post.publish_time);\n  var editTime = formatSecond(post.publish_time);\n  return __jsx(Flex, {\n    direction: \"TB\",\n    fullWidth: true\n  }, !inPost ? __jsx(Link, {\n    href: \"/post/[url]\",\n    as: \"/post/\".concat(post.url)\n  }, __jsx(\"a\", {\n    className: textStyles.color\n  }, title)) : title, __jsx(Flex, {\n    mainAxis: \"flex-start\"\n  }, __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Eye, null), post.view), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Calendar, null), __jsx(\"time\", {\n    dateTime: publishTime.replace(' ', 'T') + 'T+08'\n  }, publishTime)), post.publish_time == post.edit_time ? null : __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    mainSize: \"small\"\n  }, __jsx(Edit, null), __jsx(\"time\", {\n    dateTime: editTime.replace(' ', 'T') + 'T+08'\n  }, editTime)), inPost && (context.user.permission & 1) == 1 ? __jsx(Link, {\n    href: \"/admin/post?url=\".concat(post.url),\n    passHref: true\n  }, __jsx(A, {\n    primary: true,\n    neumorphism: true,\n    size: \"small\",\n    target: \"_blank\"\n  }, \"\\u7F16\\u8F91\")) : null), __jsx(Flex, {\n    mainAxis: \"flex-start\",\n    subSize: \"middle\"\n  }, [__jsx(Tag, {\n    key: \"tag_icon\"\n  })].concat(_toConsumableArray(post.tags.map(function (tag) {\n    return __jsx(TagPart, {\n      key: tag[\"short\"],\n      tag: tag\n    });\n  })))));\n}\nexport default function PostCard(props) {\n  var post = props.post;\n  var loading = props.loading || typeof props.post === 'undefined';\n  return __jsx(Card, {\n    neumorphism: true,\n    cover: !loading && post.head_image ? __jsx(Image, {\n      src: post.head_image,\n      height: \"300px\",\n      alt: \"\\u6587\\u7AE0\\u300E\".concat(post.title, \"\\u300F\\u7684\\u5934\\u56FE\"),\n      title: post.title\n    }) : null\n  }, loading ? __jsx(Loading, null) : __jsx(CardContent, {\n    post: post\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}