{"ast":null,"code":"import _defineProperty from \"/github/workspace/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/github/workspace/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport default function JS(props) {\n  var js = props.js,\n      children = props.children;\n  React.useEffect(function () {\n    try {\n      eval(js);\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n  return children;\n}\nexport function AD(props) {\n  var setting = props.setting,\n      restProps = _objectWithoutProperties(props, [\"setting\"]);\n\n  var _React$useMemo = React.useMemo(function () {\n    return splitJS(setting);\n  }, [setting]),\n      js = _React$useMemo.js,\n      html = _React$useMemo.html;\n\n  return /*#__PURE__*/_jsx(JS, {\n    js: js,\n    children: /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, restProps), {}, {\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }))\n  });\n}\nexport function splitJS(text) {\n  var re = new RegExp(\"<script.*?>(.*?)</script>\", 'g');\n  var js = [];\n  var html = [];\n  var pos = 0;\n\n  do {\n    var result = re.exec(text);\n\n    if (result !== null) {\n      js.push(result[1]);\n      html.push(text.slice(pos, result.index));\n      pos = result.index + result[0].length;\n    } else {\n      html.push(text.slice(pos));\n    }\n  } while (result);\n\n  return {\n    js: js.join('\\n'),\n    html: html.join('\\n')\n  };\n}","map":null,"metadata":{},"sourceType":"module"}